{"version":3,"sources":["js/config.js","js/utils.js","index/index.js","index/newcollection.js","index/editcollections.js","index/newcomposition.js"],"names":["MODE","DEVPORT","ENVIRONMENTS","PROD","ENDPOINT","UPLOAD_ENDPOINT","STAGE","window","location","protocol","host","DEV","hostname","module","exports","getJsonApi","enpoint","on_ok","on_ko","fetch","method","headers","then","r","ok","json","statusText","data","catch","error","listElelemts","uriCompositionPage","uriProfilePage","origin","document","getElementById","innerHTML","getMyProfile","doAfterIfLogged","doAfterIfNotLogged","isAuthenticated","style","display","innerText","name","getMyCompositions","isAuth","renderHomePage","compositions","alert","getRecentCompositions","compositionsList","renderOpt","classList","remove","paintListOfCompositions","length","hidden","forEach","element","collection","template","opentocontrib","uuid","photo_url","COMPOSITION_COVER","title","insertAdjacentHTML","removeAttribute","initHomPage","createNewCollButton","saveCollectionButton","getCollections","response","result","respJson","getCollectionsSuccess","list","replaceChildren","createListCollections","disabled","getCollectionsError","collections","listId","coll_id","theList","all_collections","listCollContainer","listOptions","selected","saveNewCollReqst","newcolltitle","value","privacyLevel","querySelector","collectInput","parentCollection","body","JSON","stringify","privacy_level","parent_uuid","request","sendRqst","respToJson","$","modal","clickNewCollButtonHandler","addEventListener","EDIT_STATUS","showAllCollButton","editButton","fetchCollectionsTree","createTreeHTML","item","html","composition","renderTree","treeContainer","clickEditButtonHandler","disableEdition","enableEdition","querySelectorAll","removeCollectionClickhHandler","getAttribute","updateInputTextEventHandler","setAttribute","clickAllCollButtonHandler","confirmDeleteCollectionModal","event","collectionId","collectionTitle","target","tagName","confirm","listElemToDelete","nextSibling","checked","onclick","currentTitle","onblur","handleInputBlur","updateCollectionTitleRqst","updateTitleApi","console","collId","currTitle","newValue","createNewCompButton","createNewCompButtonAtHome","clickNewCompButtonHandler","saveCompositionButton","saveEventListener","getCompCollSuccess","saveEventListenerHandler","e","newcomptitle","Error","href"],"mappings":"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","file":"newcomposition.60578b4a.js","sourceRoot":"../webapp/src","sourcesContent":["const MODE = 'STAGE' // STAGE\nconst DEVPORT = 7007\n\nconst ENVIRONMENTS = {\n    PROD:{        \n        ENDPOINT:'',\n        UPLOAD_ENDPOINT:''        \n    },\n    STAGE:{        \n        ENDPOINT: window.location.protocol+'//'+window.location.host,\n        UPLOAD_ENDPOINT: window.location.protocol+'//'+window.location.host+'/fileUpload'       \n    },\n    DEV:{        \n        ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT,\n        UPLOAD_ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT+'/fileUpload'        \n    }\n}\n\nmodule.exports = {    \n    ENDPOINT: ENVIRONMENTS[MODE].ENDPOINT,\n    UPLOAD_ENDPOINT: ENVIRONMENTS[MODE].UPLOAD_ENDPOINT\n}","import { ENDPOINT } from './config'\n\n\nfunction getJsonApi(enpoint, on_ok, on_ko) {\n\n    fetch(ENDPOINT + enpoint, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        }\n    }).then((r) => {\n\n        if (!r.ok) {\n            return on_ko ? on_ko(r.statusText) : null ;\n        }\n        return r.json();\n\n    }).then(data => {\n\n        return on_ok ? on_ok(data) : null ;\n\n    }).catch((error) => {\n\n        return on_ko ? on_ko(error) : null ;\n    })\n\n}\n\n\nmodule.exports = {\n    getJsonApi: getJsonApi,\n}","import COMPOSITION_COVER from '../img/agp.png'\r\nimport { getJsonApi } from '../js/utils'\r\n\r\nlet listElelemts = ''\r\n\r\nexport let uriCompositionPage = '/composition.html?compositionId='\r\nlet uriProfilePage = window.location.origin\r\n\r\n\r\ndocument.getElementById('userlogin').innerHTML = `<li class='nav-item'>\r\n  <a class='dropdown-item' href='${window.location.origin}/login'>Google Login</a>\r\n  </li>\r\n  <li class='nav-item'>\r\n    <a class='dropdown-item' href='${uriCompositionPage}demopage'>Test DAW</a>\r\n  </li>`\r\ndocument.getElementById('useroptions').innerHTML = `<li class='nav-item'>\r\n      <a class='nav-link' href='${uriProfilePage + '/profile.html'}'>Profile <i id='display_profile_name'></i></a>\r\n    </li>\r\n    <li class='nav-item'>\r\n          <a class='nav-link' href='#' id='createNewCompButton' data-toggle='modal' data-target='#newMusicModal'>/ New Music</a>\r\n    </li>\r\n    <li class='nav-item'>\r\n        <a class='nav-link' href='#' id='createNewCollButton' data-toggle='modal' data-target='#newCollectionModal'>/ New Collection</a>\r\n    </li>\r\n    <li class='nav-item'>\r\n        <a class='nav-link' href='#' id='openMyCollectionsButton' data-toggle='modal' data-target='#editCollectionsModal'>/ My Collections</a>\r\n    </li>`\r\n\r\nconst getMyProfile = async (doAfterIfLogged, doAfterIfNotLogged) => {\r\n  await getJsonApi(\"/profile\", async (r) => {\r\n\r\n    const isAuthenticated = ('ok' in r && r['ok'] == true);\r\n  \r\n    if (isAuthenticated) {\r\n      document.getElementById('userlogin').style.display = \"none\";\r\n      document.getElementById('useroptions').style.display = \"\";\r\n      document.getElementById('display_profile_name').innerText = `[${r.name}]`;\r\n      await doAfterIfLogged(isAuthenticated)\r\n    } else {\r\n      await doAfterIfNotLogged(isAuthenticated)\r\n    }\r\n  \r\n  });\r\n}\r\n\r\nconst getMyCompositions = async (isAuth) => {\r\n  await getJsonApi(\"/mycompositions\", (data) => {\r\n\r\n    if (\"compositions\" in data)\r\n      return renderHomePage(data.compositions, \"My Compositions\", isAuth)\r\n\r\n    alert(\"invalid return value for compisitions list\");\r\n\r\n  }, (error) => { alert(error) })\r\n}\r\nconst getRecentCompositions = async (isAuth) => {\r\n  getJsonApi(\"/recentcompositions\", (data) => {\r\n\r\n    if (\"compositions\" in data)\r\n      return renderHomePage(data.compositions, \"Last recent compositions\", isAuth)\r\n\r\n    alert(\"invalid return value for compisitions list\");\r\n\r\n  }, (error) => { alert(error) })\r\n}\r\n\r\nconst renderHomePage = (compositionsList, renderOpt, isAuth) => {\r\n\r\n  const loaderElement = document.getElementById('loader')\r\n  loaderElement.classList.remove('loader')\r\n\r\n  paintListOfCompositions(compositionsList, renderOpt, isAuth)\r\n\r\n}\r\n\r\nconst paintListOfCompositions = (compositionsList, renderOpt, isAuth) => {\r\n  \r\n  if(!compositionsList.length && isAuth){\r\n    document.getElementById('initialmessage').hidden = false\r\n  } else {\r\n\r\n    compositionsList.forEach((element) => {\r\n      if (element) {\r\n        let collection = ''\r\n        if (element.collection) {\r\n          collection = `<a href='./index.html?collection=${element.collection}' class='card-link green'>${element.collection}</a>`\r\n        }\r\n        const template = `\r\n          <div class='grid-div'>\r\n            <div class='card'>\r\n              ${element.opentocontrib ? '<span class=\"badge badge-info\">OPEN TO CONTRIB</span>' : ''}\r\n              <a href='${uriCompositionPage + element.uuid}'>\r\n                <img src='${element.photo_url || COMPOSITION_COVER}' alt='Card image cap' class='card-img'>\r\n              </a>\r\n              <div class='card-container'>\r\n                <a href='${uriCompositionPage + element.uuid}' class='card-link blue'>${element.title}</a>\r\n                <p>${collection}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        `\r\n        listElelemts += template\r\n      }\r\n    })\r\n    document.getElementById('grid').insertAdjacentHTML('afterbegin', listElelemts)\r\n    document.getElementById('searchInput').removeAttribute('disabled')\r\n    document.getElementById('homepageview').innerHTML = renderOpt\r\n  }  \r\n}\r\n\r\nconst initHomPage = async () => {\r\n  await getMyProfile(getMyCompositions,getRecentCompositions)  \r\n}\r\n\r\ninitHomPage()","\nimport { ENDPOINT } from '../js/config'\n\nconst createNewCollButton  = document.getElementById('createNewCollButton')\nconst saveCollectionButton = document.getElementById('newcollection')\n\nexport const getCollections = async () => {\n   \n    const response = await fetch(ENDPOINT + '/mycollections') \n    let result = null            \n    if(response?.ok){ \n        const respJson = await response.json()\n        result = respJson\n    }\n    return result\n}\n\nconst getCollectionsSuccess = (list) => {\n    document.getElementById('listCollContainerNewColl').replaceChildren()                                   \n    createListCollections(list, 'listCollContainerNewColl')\n    saveCollectionButton.disabled = false\n}\n\nexport const getCollectionsError = () => {\n    alert(`Problem getting collections`)\n}\n\nexport const createListCollections = (collections,listId, coll_id) => {\n    const theList = collections.all_collections\n    const listCollContainer  = document.getElementById(listId)\n    let listOptions = `<option value='0'>...</option>`\n    let selected = null\n    theList.forEach((element) => {\n        if (element) {\n            if(element.uuid === coll_id){\n                selected = 'selected>'\n            } else {\n                selected = null\n            }\n            const template = `<option value='${element.uuid}' ${selected?selected:'>'}${element.title}</option>`\n            listOptions += template\n        }\n    })\n    const listElelemts = `<select class='custom-select' id='inputGroupSelectCollect'>${listOptions}</select>`   \n    listCollContainer.insertAdjacentHTML('afterbegin', listElelemts)\n}\n\nconst saveNewCollReqst = async() => {\n    let newcolltitle = document.getElementById('newcolltitle').value\n    const privacyLevel = document.querySelector('input[name=\"newCollectionPrivacyRadios\"]:checked').value\n    if (!newcolltitle) {\n        alert('Introduce a valid title, please')\n        return\n    }\n    \n    const collectInput = document.getElementById('inputGroupSelectCollect')\n    let parentCollection = collectInput.value\n    if(parentCollection === '0'){\n        parentCollection = null\n    }\n\n    let body = JSON.stringify({\n        title: newcolltitle,\n        privacy_level: privacyLevel,\n        parent_uuid: parentCollection\n    })\n \n    let response = null\n    const request = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        },\n        body: body\n    }\n    try {\n        const sendRqst = await fetch(ENDPOINT + '/newcollection', request)\n        const respToJson = await sendRqst.json()\n        if (respToJson && !respToJson.error) {\n            response = respToJson\n        } else {\n            alert(respToJson?.error || 'An error occurred')\n        }\n    } catch (error) {\n        alert(error)\n    }\n    $('#newCollectionModal').modal('hide')\n    return response\n}\n\nconst clickNewCollButtonHandler = () => {\n    document.getElementById('newcolltitle').value = ''\n    getCollections().then( result => {\n        if(result){\n            getCollectionsSuccess(result)\n        } else {\n            getCollectionsError()\n        }\n    })\n}\ncreateNewCollButton?.addEventListener('click', clickNewCollButtonHandler, false)\n\nsaveCollectionButton?.addEventListener('click', saveNewCollReqst, false)","import { ENDPOINT } from '../js/config'\nimport {uriCompositionPage} from './index'\n\nlet EDIT_STATUS = false\n\nconst showAllCollButton = document.getElementById('openMyCollectionsButton')\nconst editButton = document.getElementById('editmycollectionsbutton')\n\nconst fetchCollectionsTree = async () => {\n    const response = await fetch('/mycollectionsastree')\n    const data = await response.json()\n    return data\n}\n\nconst createTreeHTML = (item) => {\n    let html = `\n        <span id='removeCollIcon${item.uuid}' data-uuid='${item.uuid}' data-title='${item.title}' role='button' class='badge badge-pill badge-danger' hidden>-</span>\n        <li id='${item.uuid}' class='list-group-item border-bottom-0 border-right-0 border-top-0 border-warning'>\n            <input type='text' class='form-control border-secondary' id='treecolltitleinput${item.uuid}' data-uuid='${item.uuid}' placeholder='Type a new title'\n            title='collectiontitle' value='${item.title}' disabled>\n        </li>`\n    \n    if (item.compositions.length > 0 || item.collections.length > 0) {\n        html += '<ul>'\n        for (const composition of item.compositions) {\n            html += `<li class='list-group-item border-0'><a href='${uriCompositionPage + composition.uuid}'><u>${composition.title}</u></a></li>`\n        }\n        for (const collection of item.collections) {\n            html += createTreeHTML(collection)\n        }\n        html += '</ul>'\n    }    \n    return html\n}\n\nconst renderTree = async () => {\n    const treeContainer = document.getElementById('listCollContainerAllColl')\n    const data = await fetchCollectionsTree()\n    let html = '<ul>'\n    for (const collection of data) {\n        html += createTreeHTML(collection)\n    }\n    html += '</ul>'\n    treeContainer.innerHTML = html\n}\n\nconst clickEditButtonHandler = () => {\n    \n    if(EDIT_STATUS){\n        EDIT_STATUS = false        \n        editButton.innerText =  'Edit'\n        disableEdition()\n    } else {\n        EDIT_STATUS = true\n        editButton.innerText =  'Done'\n        enableEdition()\n    }   \n}\n\nconst enableEdition = () => {\n    \n    const elementsWithHiddenAttribute = document.querySelectorAll(`[id*='removeCollIcon']`)\n\n    elementsWithHiddenAttribute.forEach(element => {\n        element.removeAttribute('hidden')        \n        removeCollectionClickhHandler(element.getAttribute('data-uuid'), element.getAttribute('data-title'))\n    })   \n    \n    const elementsWithDisabledAttribute = document.querySelectorAll(`[id*='treecolltitleinput']`)\n\n    elementsWithDisabledAttribute.forEach(element => {\n        element.removeAttribute('disabled')\n        updateInputTextEventHandler(element.getAttribute('data-uuid'), element.value)\n    })\n}\n\nconst disableEdition = () => {\n\n    const elementsWithHiddenAttribute = document.querySelectorAll(`[id*='removeCollIcon']`)\n\n    elementsWithHiddenAttribute.forEach(element => {\n        element.setAttribute('hidden', 'true')\n    })\n\n    const elementsWithDisabledAttribute = document.querySelectorAll(`[id*='treecolltitleinput']`)    \n\n    elementsWithDisabledAttribute.forEach(element => {\n        element.setAttribute('disabled', 'true')\n    })\n}\n\nconst clickAllCollButtonHandler = async () => {\n    EDIT_STATUS = false\n    editButton.innerText =  'Edit'\n    await renderTree()\n    editButton.addEventListener('click', clickEditButtonHandler, false)\n}\n\nshowAllCollButton?.addEventListener('click', clickAllCollButtonHandler, false)\n\nconst confirmDeleteCollectionModal = async (event, collectionId, collectionTitle) => {\n\n    const chk = event.target\n\n    if (chk.tagName === 'SPAN') {\n\n        if (confirm(`Are you sure you want remove the collection ${collectionTitle} and all of its content?`) == true) {\n\n            const response = await fetch(ENDPOINT + '/deletecollection/' + collectionId, { method: 'DELETE' })\n            if (response?.ok) {\n                document.getElementById('removeCollIcon'+collectionId).remove()\n                const listElemToDelete = document.getElementById(collectionId)\n                if(listElemToDelete?.nextSibling?.tagName === 'UL'){\n                    listElemToDelete.nextSibling.remove()\n                }\n                listElemToDelete.remove()\n            }\n\n        } else {\n            event.target.checked = false\n        }\n    }\n}\n\nconst removeCollectionClickhHandler = (collectionId, collectionTitle) => {\n    document.getElementById('removeCollIcon' + collectionId).onclick= async (event) => {\n        await confirmDeleteCollectionModal(event, collectionId, collectionTitle)\n    }\n}\n\nconst updateInputTextEventHandler = (collectionId, currentTitle) => {    \n    document.getElementById('treecolltitleinput'+collectionId).onblur = (event) => {\n        handleInputBlur(event, collectionId, currentTitle)\n    }    \n}\n\nconst updateCollectionTitleRqst = (value, uuid) => {\n   \n    const updateTitleApi = ENDPOINT + '/updatecolltitle'\n    const data = { title: value, uuid: uuid }\n    \n    fetch(updateTitleApi, {\n        method: 'PATCH', \n        headers: {\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    })\n    .then()\n    .catch(error => {\n        console.error('Error updating value:', error)\n    })\n}\n\nconst handleInputBlur = (event, collId, currTitle) => {    \n    const newValue = event.target.value\n    if(currTitle !== newValue){\n        if (!newValue || newValue === '') {\n            event.target.value = currTitle\n            alert('Introduce a valid title, please')\n            return\n        } else {\n            updateCollectionTitleRqst(newValue, collId)\n        }\n    }\n}","\nimport { ENDPOINT } from '../js/config'\nimport {uriCompositionPage} from './index.js'\nimport {getCollections, getCollectionsError, createListCollections } from './newcollection.js'\nimport './editcollections'\n\nconst createNewCompButton  = document.getElementById('createNewCompButton')\nconst createNewCompButtonAtHome  = document.getElementById('createNewCompButtonAtHome')\n\nconst clickNewCompButtonHandler = () => {\n  document.getElementById('newcomptitle').value = ''\n  const saveCompositionButton = document.getElementById('newcomposition')\n  saveEventListener(saveCompositionButton)\n  getCollections().then( result => {\n      if(result){\n          getCompCollSuccess(result)\n      } else {\n          getCollectionsError()\n      }\n  })\n}\n\ncreateNewCompButton?.addEventListener('click', clickNewCompButtonHandler, false)\ncreateNewCompButtonAtHome?.addEventListener('click', clickNewCompButtonHandler, false)\n\nconst getCompCollSuccess = (list) => {\n  document.getElementById('listCollContainerNewComp').replaceChildren()                                   \n  createListCollections(list, 'listCollContainerNewComp')\n}\n\nconst saveEventListener = (saveCompositionButton) =>{\n  saveCompositionButton?.addEventListener('click', saveEventListenerHandler)\n}\n\nconst saveEventListenerHandler = (e) => {\n  let newcomptitle = document.getElementById('newcomptitle').value\n  const privacyLevel = document.querySelector('input[name=\"newMusicPrivacyRadios\"]:checked').value\n  if (!newcomptitle) {\n    alert('Introduce a valid title, please')\n    return\n  }\n\n  const collectInput = document.getElementById('inputGroupSelectCollect')\n  let parentCollection = collectInput?.value || null\n  if(parentCollection === '0'){\n      parentCollection = null\n  }\n\n  let body = JSON.stringify({\n    title: newcomptitle,\n    privacy_level: privacyLevel,\n    parent_uuid: parentCollection\n  })\n\n  let errorIs = null\n\n  fetch(ENDPOINT + '/newcomposition', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: body\n  })\n    .then((r) => {\n      if (!r.ok) {\n        errorIs = r.statusText\n      }\n      return r.json()\n    })\n    .then(data => {\n      if (data.composition) {\n        window.location.href = uriCompositionPage + data.composition.uuid\n      } else {\n        throw new Error(data)\n      }\n    }).catch((error) => {\n      errorIs = error\n    })\n}"]}