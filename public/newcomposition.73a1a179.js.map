{"version":3,"sources":["js/config.js","index/index.js","index/newcollection.js","index/newcomposition.js"],"names":["MODE","DEVPORT","ENVIRONMENTS","PROD","ENDPOINT","UPLOAD_ENDPOINT","STAGE","window","location","protocol","host","DEV","hostname","module","exports","listElelemts","errorIs","compositions","queryString","search","isAuthenticated","split","domainIs","uriCompositionPage","uriProfilePage","origin","document","getElementById","innerHTML","fetch","method","headers","then","r","ok","statusText","json","data","catch","error","renderHomePage","compositionsList","classList","remove","alert","paintListOfCompositions","forEach","element","collection","template","opentocontrib","uuid","photo_url","COMPOSITION_COVER","title","insertAdjacentHTML","removeAttribute","createNewCollButton","saveCollectionButton","getCollections","response","result","respJson","getCollectionsSuccess","list","replaceChildren","createListCollections","disabled","getCollectionsError","collections","listId","coll_id","theList","all_collections","listCollContainer","listOptions","selected","saveNewCollReqst","newcolltitle","value","privacyLevel","querySelector","collectInput","parentCollection","body","JSON","stringify","privacy_level","parent_uuid","request","sendRqst","respToJson","$","modal","clickNewCollButtonHandler","addEventListener","createNewCompButton","saveCompositionButton","clickNewCompButtonHandler","getCompCollSuccess","e","newcomptitle","composition","Error","href"],"mappings":"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","file":"newcomposition.73a1a179.js","sourceRoot":"../webapp/src","sourcesContent":["const MODE = 'STAGE' // STAGE\nconst DEVPORT = 7007\n\nconst ENVIRONMENTS = {\n    PROD:{        \n        ENDPOINT:'',\n        UPLOAD_ENDPOINT:''        \n    },\n    STAGE:{        \n        ENDPOINT: window.location.protocol+'//'+window.location.host,\n        UPLOAD_ENDPOINT: window.location.protocol+'//'+window.location.host+'/fileUpload'       \n    },\n    DEV:{        \n        ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT,\n        UPLOAD_ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT+'/fileUpload'        \n    }\n}\n\nmodule.exports = {    \n    ENDPOINT: ENVIRONMENTS[MODE].ENDPOINT,\n    UPLOAD_ENDPOINT: ENVIRONMENTS[MODE].UPLOAD_ENDPOINT\n}","import COMPOSITION_COVER from '../img/agp.png'\r\nimport { ENDPOINT } from '../js/config'\r\n\r\nlet listElelemts = ''\r\nlet errorIs = null\r\nlet compositions = []\r\n\r\nconst queryString = window.location.search\r\nconst isAuthenticated = queryString.split('auth=')[1]\r\n\r\nconst domainIs = window.location.host\r\nexport let uriCompositionPage = '/composition.html?compositionId='\r\nlet uriProfilePage = window.location.origin\r\nif (domainIs !== 'localhost:80' && window.location.origin !== 'http://localhost') {\r\n  uriCompositionPage = '/public' + uriCompositionPage\r\n  uriProfilePage += '/public'\r\n}\r\n\r\nif (isAuthenticated) {\r\n  document.getElementById('useroptions').innerHTML = `<li class='nav-item'>\r\n    <a class='nav-link' href='${uriProfilePage + '/profile.html'}'>Profile</a>\r\n  </li>\r\n  <li class='nav-item'>\r\n        <a class='nav-link' href='#' id='createNewCompButton' data-toggle='modal' data-target='#newMusicModal'>/ New Music</a>\r\n  </li>\r\n  <li class='nav-item'>\r\n      <a class='nav-link' href='#' id='createNewCollButton' data-toggle='modal' data-target='#newCollectionModal'>/ New Collection</a>\r\n  </li>`\r\n} else {\r\n  document.getElementById('useroptions').innerHTML = `<a class='dropdown-item' href='${window.location.origin}/login'>Google Login</a>`\r\n}\r\n\r\nfetch(ENDPOINT + '/compositions', {\r\n  method: 'GET',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  }\r\n}).then((r) => {\r\n  if (!r.ok) {\r\n    errorIs = r.statusText\r\n  }\r\n  return r.json()\r\n})\r\n  .then(data => {\r\n    if (data.compositions) {\r\n      compositions = data.compositions\r\n    }\r\n  }).catch((error) => {\r\n    errorIs = error\r\n  }).then(() => {\r\n    renderHomePage(compositions, errorIs)\r\n  })\r\n\r\nconst renderHomePage = (compositionsList, error) => {\r\n\r\n  const loaderElement = document.getElementById('loader')\r\n  loaderElement.classList.remove('loader')\r\n\r\n  if (error) {\r\n    alert(error)\r\n  } else {\r\n    paintListOfCompositions(compositionsList)\r\n  }\r\n}\r\n\r\nconst paintListOfCompositions = (compositionsList) => {\r\n  compositionsList.forEach((element) => {\r\n    if (element) {\r\n      let collection = ''\r\n      if (element.collection) {\r\n        collection = `<a href='./index.html?collection=${element.collection}' class='card-link green'>${element.collection}</a>`\r\n      }\r\n      const template = `\r\n        <div class='grid-div'>\r\n          <div class='card'>\r\n            ${element.opentocontrib ? '<span class=\"badge badge-info\">OPEN TO CONTRIB</span>' : ''}\r\n            <a href='${uriCompositionPage + element.uuid}'>\r\n              <img src='${element.photo_url || COMPOSITION_COVER}' alt='Card image cap' class='card-img'>\r\n            </a>\r\n            <div class='card-container'>\r\n              <a href='${uriCompositionPage + element.uuid}' class='card-link blue'>${element.title}</a>\r\n              <p>${collection}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `\r\n      listElelemts += template\r\n    }\r\n  })\r\n  document.getElementById('grid').insertAdjacentHTML('afterbegin', listElelemts)\r\n  document.getElementById('searchInput').removeAttribute('disabled')\r\n}","\nimport { ENDPOINT } from '../js/config'\n\nconst createNewCollButton  = document.getElementById('createNewCollButton')\nconst saveCollectionButton = document.getElementById('newcollection')\n\nexport const getCollections = async () => {\n   \n    const response = await fetch(ENDPOINT + '/mycollections') \n    let result = null            \n    if(response?.ok){ \n        const respJson = await response.json()\n        result = respJson\n    }\n    return result\n}\n\nconst getCollectionsSuccess = (list) => {\n    document.getElementById('listCollContainerNewColl').replaceChildren()                                   \n    createListCollections(list, 'listCollContainerNewColl')\n    saveCollectionButton.disabled = false\n}\n\nexport const getCollectionsError = () => {\n    alert(`Problem getting collections`)\n}\n\nexport const createListCollections = (collections,listId, coll_id) => {\n    const theList = collections.all_collections\n    const listCollContainer  = document.getElementById(listId)\n    let listOptions = `<option value='0'>...</option>`\n    let selected = null\n    theList.forEach((element) => {\n        if (element) {\n            if(element.uuid == coll_id){\n                selected = 'selected>'\n            }\n            const template = `<option value='${element.uuid}' ${selected?selected:'>'}${element.title}</option>`\n            listOptions += template\n        }\n    })\n    const listElelemts = `<select class='custom-select' id='inputGroupSelectCollect'>${listOptions}</select>`   \n    listCollContainer.insertAdjacentHTML('afterbegin', listElelemts)\n}\n\nconst saveNewCollReqst = async() => {\n    let newcolltitle = document.getElementById('newcolltitle').value\n    const privacyLevel = document.querySelector('input[name=\"newCollectionPrivacyRadios\"]:checked').value\n    if (!newcolltitle) {\n        alert('Introduce a valid title, please')\n        return\n    }\n    \n    const collectInput = document.getElementById('inputGroupSelectCollect')\n    let parentCollection = collectInput.value\n    if(parentCollection === '0'){\n        parentCollection = null\n    }\n\n    let body = JSON.stringify({\n        title: newcolltitle,\n        privacy_level: privacyLevel,\n        parent_uuid: parentCollection\n    })\n \n    let response = null\n    const request = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        },\n        body: body\n    }\n    try {\n        const sendRqst = await fetch(ENDPOINT + '/newcollection', request)\n        const respToJson = await sendRqst.json()\n        if (respToJson && !respToJson.error) {\n            response = respToJson\n        } else {\n            alert(respToJson?.error || 'An error occurred')\n        }\n    } catch (error) {\n        alert(error)\n    }\n    $('#newCollectionModal').modal('hide')\n    return response\n}\n\nconst clickNewCollButtonHandler = () => {\n    document.getElementById('newcolltitle').value = ''\n    getCollections().then( result => {\n        if(result){\n            getCollectionsSuccess(result)\n        } else {\n            getCollectionsError()\n        }\n    })\n}\ncreateNewCollButton?.addEventListener('click', clickNewCollButtonHandler, false)\n\nsaveCollectionButton?.addEventListener('click', saveNewCollReqst, false)","\nimport { ENDPOINT } from '../js/config'\nimport {uriCompositionPage} from './index.js'\nimport {getCollections, getCollectionsError, createListCollections } from './newcollection.js'\n\nconst createNewCompButton  = document.getElementById('createNewCompButton')\nconst saveCompositionButton = document.getElementById('newcomposition')\n\nconst clickNewCompButtonHandler = () => {\n  document.getElementById('newcomptitle').value = ''\n  getCollections().then( result => {\n      if(result){\n          getCompCollSuccess(result)\n      } else {\n          getCollectionsError()\n      }\n  })\n}\n\ncreateNewCompButton?.addEventListener('click', clickNewCompButtonHandler, false)\n\nconst getCompCollSuccess = (list) => {\n  document.getElementById('listCollContainerNewComp').replaceChildren()                                   \n  createListCollections(list, 'listCollContainerNewComp')\n}\n\nsaveCompositionButton?.addEventListener('click', (e) => {\n  let newcomptitle = document.getElementById('newcomptitle').value\n  const privacyLevel = document.querySelector('input[name=\"newMusicPrivacyRadios\"]:checked').value\n  if (!newcomptitle) {\n    alert('Introduce a valid title, please')\n    return\n  }\n\n  const collectInput = document.getElementById('inputGroupSelectCollect')\n  let parentCollection = collectInput?.value || null\n  if(parentCollection === '0'){\n      parentCollection = null\n  }\n\n  let body = JSON.stringify({\n    title: newcomptitle,\n    privacy_level: privacyLevel,\n    parent_uuid: parentCollection\n  })\n\n  let errorIs = null\n\n  fetch(ENDPOINT + '/newcomposition', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: body\n  })\n    .then((r) => {\n      if (!r.ok) {\n        errorIs = r.statusText\n      }\n      return r.json()\n    })\n    .then(data => {\n      if (data.composition) {\n        window.location.href = uriCompositionPage + data.composition.uuid\n      } else {\n        throw new Error(data)\n      }\n    }).catch((error) => {\n      errorIs = error\n    })\n\n})"]}