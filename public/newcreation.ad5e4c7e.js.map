{"version":3,"sources":["common/js/config.js","common/js/utils.js","pages/home/scripts/breadcrumbhandler.js","common/js/acceptterms.js","pages/home/scripts/home_helper.js","pages/home/scripts/home_ui.js","pages/home/scripts/home.js","common/js/collectionshandler.js","pages/home/scripts/editcollections.js","pages/home/scripts/newcreation.js"],"names":["MODE","DEVPORT","ENVIRONMENTS","PROD","ENDPOINT","UPLOAD_ENDPOINT","STAGE","window","location","protocol","host","DEV","hostname","module","exports","LOADER_ELEM_ID","startLoader","loaderId","loadingMessage","loaderElement","document","getElementById","nextElementSibling","textContent","classList","add","cancelLoader","remove","callJsonApi","apimethod","rqstmethod","body","request","method","headers","JSON","stringify","fetch","sendRqst","json","respToJson","error","looksLikeMail","str","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","activateGoHomeLink","goHomeLink","origin","href","breadcrumbHandler","isauth","isuserorcollection","createBreadCrumbNavBar","querySelectorAll","forEach","element","addEventListener","event","preventDefault","querySelector","currentTarget","navigate","getAttribute","navBar","userOptions","ok","innerHTML","section","url","URL","searchParams","delete","history","replaceState","getRecentCompositions","getMyCompositions","hidden","getAllCompositions","console","log","checkIfTermsAccepted","userprofile","callback","terms_accepted","handleTermsNotAccepted","$","modal","backdrop","keyboard","onclick","rqstAcceptTerms","rqstRejectTerms","generateAcceptTermsModal","attachToElem","modalDialog","getElementsByTagName","insertAdjacentHTML","_USERNAME","isuserpage","endpoint","result","includes","getCurrentUserName","setCurrentUserName","username","displayUserNameInCard","getGroupsByCollAndUser","compositionsList","groupedbycoll","groupedbyuser_aux","composition","collectionId","collection_uid","userId","user_id","push","getGroupsByCollectionAndSubColl","parent_coll_id","singlecomps","getGroupsByCollAndCollab","groupedbycollab","contributors","getFinalGroupByUserAndSingleComp","groupedbyuser_final","elem","getGroupedCompositionsWithUsers","getGroupedCompositionsWithCollab","getGroupedCompositionsWithSubCollect","uriUserPage","uriCollectionPage","BADGE_STYLE","BORDER_STYLE","URI_PAGE","WELCOME_TEXT","initNavigationMenu","uriCompositionPage","getLegendButtons","numberGroupsByCollections","numberGroupsCustom","numberSinglComp","totalcomps","displayGroupsByLabel","paintMainElemsHomePage","listElelemts","legendButtons","removeAttribute","paintSingleComposition","displayName","opentocontrib","uuid","title","description","parent_collection","owner_uuid","tracks","getUIListElemInsideCollection","item","typebadge","getUICardElemForCollection","numitems","groupTitle","groupId","listgroup","badegstyle","borderstyle","badgeDisplayed","cleanWelcomeContainer","hidetext","welcomecontainer","lastChild","id","removeChild","welcometextelem","createElement","appendChild","updateUIWithCollectionInfo","collectiontitle","collectionInfoContainer","updateUIWithUserInfo","useruid","userInfoContainer","homePageTermsAccepted","termsAccepted","getMyProfile","isAuthenticated","name","style","display","innerText","data","compositions","renderHomePage","alert","getCompositionsByUserUid","auth","getCompositionsByColelctionUid","collectionuid","collection_name","owneruid","notUserPublicPage","renderHomePageWithLists","replace","groupedCompsAndSubColl","paintListOfCompositions","groupedCompsWithCollab","groupedComps","paintGroupCollection","listcomps","allCompUIelem","comp","Object","values","getSingleComps","listCompsSingle","template","customgroup","keys","numberCustomGroups","listComps","initHomPage","queryString","search","split","isAuth","getCollections","response","respJson","getCollectionsError","createListCollections","collections","listId","coll_id","theList","all_collections","listCollContainer","listOptions","selected","EDIT_STATUS","showAllCollButton","editButton","fetchCollectionsTree","createTreeHTML","html","renderTree","treeContainer","collection","clickEditButtonHandler","disableEdition","enableEdition","removeCollectionClickhHandler","updateInputTextEventHandler","value","setAttribute","clickAllCollButtonHandler","confirmDeleteCollectionModal","collectionTitle","target","tagName","confirm","listElemToDelete","nextSibling","checked","currentTitle","onblur","handleInputBlur","updateCollectionTitleRqst","updateTitleApi","then","catch","collId","currTitle","newValue","createNewButton","createNewButtonAtHome","clickNewButtonHandler","saveCompositionButton","saveEventListener","getCompCollSuccess","list","replaceChildren","saveEventListenerHandler","e","apiMethod","newtitle","privacyLevel","newdescription","collectInput","parentCollection","privacy_level","parent_uuid","r","statusText","Error","verifyResponse"],"mappings":"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","file":"newcreation.ad5e4c7e.js","sourceRoot":"../webapp/src","sourcesContent":["const MODE = 'STAGE' // STAGE\nconst DEVPORT = 7007\n\nconst ENVIRONMENTS = {\n    PROD:{        \n        ENDPOINT:'',\n        UPLOAD_ENDPOINT:''        \n    },\n    STAGE:{        \n        ENDPOINT: window.location.protocol+'//'+window.location.host,\n        UPLOAD_ENDPOINT: window.location.protocol+'//'+window.location.host+'/fileUpload'       \n    },\n    DEV:{        \n        ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT,\n        UPLOAD_ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT+'/fileUpload'        \n    }\n}\n\nmodule.exports = {    \n    ENDPOINT: ENVIRONMENTS[MODE].ENDPOINT,\n    UPLOAD_ENDPOINT: ENVIRONMENTS[MODE].UPLOAD_ENDPOINT\n}","import { ENDPOINT } from './config'\n\nexport const LOADER_ELEM_ID = 'loader'\n\nexport const startLoader = (loaderId, loadingMessage) => {    \n    const loaderElement = document.getElementById(loaderId)    \n    loaderElement.nextElementSibling.textContent = loadingMessage\n    loaderElement.classList.add(loaderId)\n}\n\nexport const cancelLoader = (loaderId) => {\n    const loaderElement = document.getElementById(loaderId)\n    loaderElement.classList.remove(loaderId)\n    loaderElement.nextElementSibling.textContent = ''\n}\n\nexport const callJsonApi = async (apimethod, rqstmethod, body) => {\n    const request = {\n        method: rqstmethod || 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        }\n    }\n    if(body){\n        request.body = JSON.stringify(body)\n    }\n    try {\n        startLoader(LOADER_ELEM_ID, 'Loading...')\n        const sendRqst = await fetch(ENDPOINT + apimethod, request)\n        cancelLoader(LOADER_ELEM_ID)\n        const respToJson = await sendRqst.json()\n        if (respToJson && !respToJson.error) {\n            return respToJson\n        } else {\n            return (respToJson?.error || 'An error occurred')\n        }\n    } catch (error) {\n        cancelLoader(LOADER_ELEM_ID)\n        return(error)\n    }\n}\n\n/* https://stackoverflow.com/a/5166806 */\nexport const looksLikeMail = (str) => {\n    const lastAtPos = str.lastIndexOf('@')\n    const lastDotPos = str.lastIndexOf('.')\n    return (lastAtPos < lastDotPos && lastAtPos > 0 && str.indexOf('@@') == -1 && lastDotPos > 2 && (str.length - lastDotPos) > 2)\n}\n\nexport const activateGoHomeLink = () => {\n    const goHomeLink = document.getElementById('goHome')\n    if(window.location.host === 'localhost:80' || window.location.origin === 'http://localhost'){\n        goHomeLink.href = window.location.origin + '/index.html'\n    } else {\n        goHomeLink.href = window.location.origin\n    }\n}","import { getRecentCompositions, getMyCompositions, getAllCompositions } from './home'\n\nexport const breadcrumbHandler = (isauth, isuserorcollection) => {\n    createBreadCrumbNavBar(isauth, isuserorcollection)   \n    document.querySelectorAll('.breadcrumb-item a').forEach(function (element) {\n        element.addEventListener('click', function (event) {\n            event.preventDefault()\n            document.querySelector('.active-breadcrumb')?.classList.remove('active-breadcrumb')            \n            event.currentTarget.classList.add('active-breadcrumb')\n            let section = event.currentTarget.getAttribute('data-section')\n            navigate(section)\n        })\n    })\n}\n\nconst createBreadCrumbNavBar = (isauth, isuserorcollection) => {\n    const navBar = document.getElementById('breadcrumbnavbar')\n    let userOptions = ''\n    if(isauth.ok){\n        userOptions = `<li class='breadcrumb-item ${isuserorcollection ? '' : 'active-breadcrumb'}' aria-current='page'><a href='#' data-section='my-comp'>My Music</a></li>\n        <li class='breadcrumb-item'><a href='#' data-section='all-comp'>All</a></li>`\n    } else {\n        userOptions = `<li class='breadcrumb-item ${isuserorcollection ? '' : 'active-breadcrumb'}' aria-current='page'><a href='#' data-section='recent-comp'>Recent</a></li>\n        <li class='breadcrumb-item'><a href='#' data-section='all-comp'>All</a></li>`\n    }\n    navBar.innerHTML = userOptions    \n}\n\nexport function navigate(section) { \n    const url = new URL(window.location.href)\n    url.searchParams.delete('userid')\n    url.searchParams.delete('collectionid')\n    history.replaceState(null, null, url)\n    switch (section) {\n        case 'recent-comp':           \n            getRecentCompositions()   \n            break\n        case 'my-comp':            \n            getMyCompositions()\n            break\n        case 'all-comp':\n            document.getElementById('initialmessage').classList.remove('d-flex')\n            document.getElementById('initialmessage').hidden = true\n            getAllCompositions()\n            break\n        default:\n            console.log('section default')\n    }\n}","import { LOADER_ELEM_ID, cancelLoader, callJsonApi } from './utils'\n\nexport const checkIfTermsAccepted = (userprofile, callback) => {\n    cancelLoader(LOADER_ELEM_ID)\n    callback(userprofile?.terms_accepted)\n}\n\nexport const handleTermsNotAccepted = () => {\n\n    $('#acceptTermsModal').modal({\n        backdrop: 'static',\n        keyboard: false  // to prevent closing with Esc button (if you want this too)\n    })\n    $('#acceptTermsModal').modal('show')\n    document.getElementById('buttonAcceptTerms').onclick = rqstAcceptTerms\n    document.getElementById('buttonRejectTerms').onclick = rqstRejectTerms\n}\n\nconst rqstAcceptTerms = async () => {\n    const data = await callJsonApi('/acceptterms', 'PUT')\n    if (data.ok) {\n        $('#acceptTermsModal').modal('hide')\n    }\n}\nconst rqstRejectTerms = async () => {\n    const data = await callJsonApi('/rejectterms', 'PUT')\n    if (data.ok) {\n        $('#acceptTermsModal').modal('hide')\n        window.location.href = window.location.origin\n    }\n}\n\nexport const generateAcceptTermsModal = (attachToElem) => {\n\n    const isModal = document.getElementById('acceptTermsModal')\n\n    if (!isModal) {\n        const modalDialog = `<div class=\"modal fade\" id=\"acceptTermsModal\" tabindex=\"-1\" role=\"dialog\">\n            <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Accept Terms</h5>                \n                </div>\n                <div class=\"modal-body\">\n                <p>By clicking on OK you accept the Terms of Use.</p>\n                <p>More information at: <span> <a href=\"${window.location.origin}/static/terms.html\" target=\"_blank\">${window.location.origin}/static/terms.html</a></span></p>\n                </div>\n                <div class=\"modal-footer\">\n                <button id=\"buttonRejectTerms\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Reject</button>\n                <button id=\"buttonAcceptTerms\" type=\"button\" class=\"btn btn-primary\">OK</button>\n                </div>\n            </div>\n            </div>\n        </div>`\n        document.getElementsByTagName(attachToElem)[0].insertAdjacentHTML('afterend', modalDialog)\n    }\n    handleTermsNotAccepted()\n}","let _USERNAME = null\n\nexport const isuserpage = (endpoint) => {\n    let result = false\n    if (endpoint === '/mycompositions' || endpoint.includes('/compositionsbyuserid/') || endpoint.includes('/collectionastreebyid/')){\n        result = true\n    } \n    return result    \n}\n\nconst getCurrentUserName = () => {\n    return _USERNAME\n}\n\nexport const setCurrentUserName = (username) => {\n    _USERNAME = username\n}\n\nexport const displayUserNameInCard = (endpoint, username) => {\n    let displayName = false\n    if(!isuserpage(endpoint)){\n      displayName = true\n    } else {\n      displayName = (username !== getCurrentUserName())\n    }\n    return displayName\n  }\n\nconst getGroupsByCollAndUser = (compositionsList) => {\n\n    const groupedbycoll = {}\n    const groupedbyuser_aux = {}\n\n    compositionsList.forEach(composition => {\n\n        const collectionId = composition.collection_uid\n        const userId = composition.user_id\n\n        if (collectionId !== null) {\n            if (!groupedbycoll[collectionId]) {\n                groupedbycoll[collectionId] = []\n            }\n            groupedbycoll[collectionId].push(composition)\n        } else {\n            if (!groupedbyuser_aux[userId]) {\n                groupedbyuser_aux[userId] = []\n            }\n            groupedbyuser_aux[userId].push(composition)\n        }\n    })\n\n    return { groupedbycoll, groupedbyuser_aux }\n}\n\n\nconst getGroupsByCollectionAndSubColl = (compositionsList, parent_coll_id) => {\n\n    const groupedbycoll = {}\n    const singlecomps = []\n\n    compositionsList.forEach(composition => {\n\n        const collectionId = composition.collection_uid\n\n        if ((collectionId !== null) && (collectionId !== parent_coll_id)) {\n            if (!groupedbycoll[collectionId]) {\n                groupedbycoll[collectionId] = []\n            }\n            groupedbycoll[collectionId].push(composition)\n        } else {\n            singlecomps.push(composition)\n        }\n    })\n\n    return { groupedbycoll, singlecomps}\n}\n\nconst getGroupsByCollAndCollab = (compositionsList) => {\n\n    const groupedbycoll = {}\n    const groupedbycollab = {}\n    const singlecomps = []\n\n    compositionsList.forEach(composition => {\n\n        const collectionId = composition.collection_uid        \n\n        if (collectionId !== null) {\n            if (!groupedbycoll[collectionId]) {\n                groupedbycoll[collectionId] = []\n            }\n            groupedbycoll[collectionId].push(composition)\n        } else if (composition.contributors.length){\n            if (!groupedbycollab['collabs']) {\n                groupedbycollab['collabs'] = []\n            }\n            groupedbycollab['collabs'].push(composition)\n        } else {                \n            singlecomps.push(composition)\n        }\n    })\n\n    return { groupedbycoll, groupedbycollab, singlecomps }\n}\n\n// INFO: a group for a User is made if he has 2 or more compositions without Collection\nconst getFinalGroupByUserAndSingleComp = (groupedbyuser_aux) => {\n\n    const groupedbyuser_final = {}\n    const singlecomps = []\n\n    for (const elem in groupedbyuser_aux) {\n\n        if (groupedbyuser_aux[elem].length === 1) {\n            singlecomps.push(groupedbyuser_aux[elem][0])\n        } else {\n            if (!groupedbyuser_final[elem]) {\n                groupedbyuser_final[elem] = []\n            }\n            groupedbyuser_final[elem] = groupedbyuser_aux[elem]\n        }\n    }\n    return { singlecomps, groupedbyuser_final }\n}\n\nexport const getGroupedCompositionsWithUsers = (compositionsList) => {\n\n    const { groupedbycoll, groupedbyuser_aux } = getGroupsByCollAndUser(compositionsList)\n\n    const { singlecomps, groupedbyuser_final } = getFinalGroupByUserAndSingleComp(groupedbyuser_aux)\n\n    return {\n        groupedbycoll,\n        groupedbyuser_final,\n        singlecomps,\n    }\n}\n\nexport const getGroupedCompositionsWithCollab = (compositionsList) => {\n\n    const { groupedbycoll, groupedbycollab, singlecomps } = getGroupsByCollAndCollab(compositionsList)    \n    \n    return {\n        groupedbycoll,\n        groupedbycollab,\n        singlecomps,\n    }\n}\n\nexport const getGroupedCompositionsWithSubCollect = (compositionsList, parent_coll_id) => {\n\n    const { groupedbycoll, singlecomps } = getGroupsByCollectionAndSubColl(compositionsList, parent_coll_id)    \n    \n    return {\n        groupedbycoll,        \n        singlecomps,\n    }\n}\n","import { uriCompositionPage } from './home'\nimport { isuserpage, displayUserNameInCard } from './home_helper'\n\nconst uriUserPage = '/index.html?userid='\nconst uriCollectionPage = '/index.html?collectionid='\n\nconst BADGE_STYLE = { 'coll': 'badge-collection', 'user': 'badge-warning', 'collab': 'badge-collab' }\nconst BORDER_STYLE = { 'coll': 'border-collection', 'user': 'border-warning', 'collab': 'border-collab' }\nconst URI_PAGE = { 'coll': uriCollectionPage, 'user': uriUserPage }\n\nconst WELCOME_TEXT = 'We present Hi-Audio Online Platform a web application for musicians, researchers and an open community of enthusiasts of audio and music with a view to build a public database of music recordings from a wide variety of styles and different cultures.'\n\nexport const initNavigationMenu = () => {\n    \n    document.getElementById('userlogin').innerHTML =    \n    `<li class='nav-item'>\n        <a class='dropdown-item' href='${window.location.origin}/login.html'>Register / Login</a>\n    </li>\n    <li class='nav-item'>\n        <a class='dropdown-item' href='${uriCompositionPage}demopage'>Test DAW</a>\n    </li>`\n\n    document.getElementById('useroptions').innerHTML = \n    `<li class='nav-item'>\n      <a class='nav-link' href='${window.location.origin + '/profile.html'}'>Profile <i id='display_profile_name'></i></a>\n    </li>\n    <li class='nav-item'>\n          <a class='nav-link' href='#' id='createNewButton' data-toggle='modal' data-target='#newMusicModal'>/ Create new</a>\n    </li>\n    <li class='nav-item'>\n        <a class='nav-link' href='#' id='openMyCollectionsButton' data-toggle='modal' data-target='#editCollectionsModal'>/ My Collections</a>\n    </li>`\n}\n\nexport const getLegendButtons = (numberGroupsByCollections, numberGroupsCustom, numberSinglComp, endpoint, totalcomps) => {\n    const displayGroupsByLabel = (numberGroupsByCollections || ((!isuserpage(endpoint)) && numberGroupsCustom) || numberSinglComp)\n    return `<ul class=\"nav justify-content-end\">\n              ${displayGroupsByLabel ? '<li class=\"legenditem nav-item\"><h4><span class=\"badge badge-light\">Groups by:&nbsp;</span></h4></li>' : ''}\n              ${numberGroupsByCollections ? '<li class=\"legenditem nav-item\"><h4><span class=\"badge badge-collection\">Collections&nbsp;<span class=\"badge badge-light\">' + numberGroupsByCollections + '</span></span></h4></li>' : ''}            \n              ${((!isuserpage(endpoint)) && numberGroupsCustom) ? '<li class=\"legenditem nav-item\"><h4><span class=\"badge badge-warning\">Users&nbsp;<span class=\"badge badge-light\">' + numberGroupsCustom + '</span></span></h4></li>' : ''}\n              ${numberSinglComp ? '<li class=\"legenditem nav-item\"><h4><span class=\"badge badge-success\">Singles&nbsp;<span class=\"badge badge-light\">' + numberSinglComp + '</span></span></h4></li>' : ''}\n              <li class=\"legenditem nav-item\"><h4><span class=\"badge badge-light\">Total compositions:&nbsp;</span><span class=\"badge badge-light\">${totalcomps}</span></h4></li>\n            </ul>`\n}\n\nexport const paintMainElemsHomePage = (listElelemts, legendButtons) => {\n    document.getElementById('grid').innerHTML = ''\n    document.getElementById('grid').insertAdjacentHTML('afterbegin', listElelemts)\n    document.getElementById('legendbuttons').innerHTML = ''\n    document.getElementById('legendbuttons').insertAdjacentHTML('afterbegin', legendButtons)\n    document.getElementById('searchInput').removeAttribute('disabled')\n}\n\nexport const paintSingleComposition = (element, endpoint) => {\n    const displayName = displayUserNameInCard(endpoint, element.username)\n\n    return `<div class='card border-success'>                       \n              <div class=\"card-body\">\n              ${element.opentocontrib ? '<p class=\"badge badge-info\">OPEN TO CONTRIB</p>' : ''}               \n                  <div>  \n                    <a href='${uriCompositionPage + element.uuid}' class='card-url'>\n                      <h5 class='card-title'>${element.title}</h5>\n                    </a>\n                    <p class='card-text text-truncate'>${element.description || ''}</p>\n                    <p class='text-black-50'>${element.parent_collection ? ('Collection: ' + element.parent_collection) : ''}</p>\n                    ${displayName ? `<span class=\"d-inline-block text-truncate\" style=\"max-width: 250px;\">\n                    <i class='fa fa-user'></i>&nbsp;\n                    <a href='${uriUserPage + element.owner_uuid}' class='card-url'>\n                      ${element.username}&nbsp;\n                    </a>\n                  </span>`: ''}\n                    <span class=\"d-inline-block text-truncate\" style=\"max-width: 250px;\">\n                      <i class='fa fa-music'></i>&nbsp;${'Tracks: ' + element.tracks?.length}\n                    </span>                  \n                  </div>                \n              </div>            \n          </div>`\n}\n\nexport const getUIListElemInsideCollection = (item, typebadge, endpoint) => {\n\n    const displayName = displayUserNameInCard(endpoint, item.username)\n\n    return `<div class=\"list-group-item \">\n              ${item.opentocontrib ? '<span class=\"badge badge-info\">OPEN TO CONTRIB</span>' : ''}  \n              <p class=\"list-group-item-heading\">\n                <a href='${uriCompositionPage + item.uuid}' class='card-url'>\n                    <h5 class='card-title'>${item.title}</h5>\n                </a>\n              </p>\n              <p class=\"list-group-item-text text-truncate\">\n                ${item.description || ''}\n              </p>\n              ${(typebadge !== 'user' && displayName) ?\n            '<span class=\"d-inline-block text-truncate\" style=\"max-width: 220px;\">' +\n            '<i class=\"fa fa-user\"></i>&nbsp;' +\n            '<a href=' + uriUserPage + item.owner_uuid + ' class=\"card-url\">' + item.username + '&nbsp;' +\n            '</a>' +\n            '</span>' : ''}            \n              <span class=\"d-inline-block text-truncate\" style=\"max-width: 200px;\">\n                <i class='fa fa-music'></i>&nbsp;${'Tracks: ' + item.tracks?.length}\n              </span>\n            </div>`\n}\n\nexport const getUICardElemForCollection = (typebadge, numitems, groupTitle, groupId, listgroup) => {\n\n    const badegstyle = BADGE_STYLE[typebadge]\n    const borderstyle = BORDER_STYLE[typebadge]\n    const url = URI_PAGE[typebadge]\n    const badgeDisplayed = `<span class=\"badge ${badegstyle} d-inline-block text-truncate\" style=\"max-width:85%;\">\n                              <span class=\"badge badge-light\">${numitems}</span>&nbsp;\n                              ${url ? `<a href=${url + groupId} class=\"card-header-url\">${groupTitle}</a>` : `${groupTitle}`}                              \n                          </span>`\n\n    return `<div class='card ${borderstyle}'>                        \n              <h4>${badgeDisplayed}</h4>        \n              <div class=\"card-body\">\n                <div class=\"list-group border\">              \n                  ${listgroup}\n                </div>\n              </div>\n            </div>`\n}\n\nexport const cleanWelcomeContainer = (hidetext) => {\n    const welcomecontainer = document.getElementById('welcomecontainer')\n    if (welcomecontainer.lastChild?.id) {\n        welcomecontainer.removeChild(welcomecontainer.lastChild)\n    }\n    if (!hidetext) {\n        const welcometextelem = document.createElement('div')\n        welcometextelem.id = 'welcometext'\n        welcometextelem.classList.add('col-sm-6')\n        welcometextelem.classList.add('mx-auto')\n        welcometextelem.innerHTML = `<em>${WELCOME_TEXT}</em>`\n        document.getElementById('welcomecontainer').appendChild(welcometextelem)\n    }\n}\n\nexport const updateUIWithCollectionInfo = (collectiontitle, username, owner_uuid) => {\n\n    cleanWelcomeContainer(true)\n    const collectionInfoContainer = document.createElement('div')\n    collectionInfoContainer.id = 'infocontainer'\n    collectionInfoContainer.innerHTML = `<div class=\"card border-collection mb-3\">\n                                          <div class=\"card-header bg-transparent border-collection\"><b>Collection</b></div>\n                                          <div class=\"card-body text-dark\">\n                                            <h5 class=\"card-title\">${collectiontitle}</h5>\n                                            <p class=\"card-text\" style=\"width:300px;\">Owner: <a href=${uriUserPage + owner_uuid} class=\"card-url\">${username}</a></p>\n                                          </div>\n                                        </div>`\n    document.getElementById('welcomecontainer').appendChild(collectionInfoContainer)\n}\n\nexport const updateUIWithUserInfo = (username, useruid) => {\n\n    cleanWelcomeContainer(true)\n\n    const userInfoContainer = document.createElement('div')\n    userInfoContainer.id = 'infocontainer'\n    userInfoContainer.innerHTML = `<div class=\"card mb-3\" style=\"max-width: 540px;\">\n                                    <div class=\"row no-gutters\">\n                                      <div class=\"col-md-4\">\n                                        <img class=\"img-fluid\" src=\"https://picsum.photos/seed/${useruid}/200\" alt=\"User Picture\">\n                                      </div>\n                                      <div class=\"col-md-8\">\n                                        <div class=\"card-body\">\n                                          <h5 class=\"card-title\">User</h5>\n                                          <p class=\"card-text\" style=\"width:300px;\">${username ? `${username}` : ''}</p>                                        \n                                          <p class=\"card-text\"><small class=\"text-muted\"></small></p>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </div>`\n    document.getElementById('welcomecontainer').appendChild(userInfoContainer)\n}","import { callJsonApi, activateGoHomeLink } from '../../../common/js/utils'\r\nimport {breadcrumbHandler, navigate} from './breadcrumbhandler'\r\nimport {checkIfTermsAccepted, generateAcceptTermsModal} from '../../../common/js/acceptterms'\r\nimport {getLegendButtons,\r\n  paintMainElemsHomePage,\r\n  paintSingleComposition,\r\n  getUIListElemInsideCollection,\r\n  getUICardElemForCollection,\r\n  cleanWelcomeContainer,\r\n  updateUIWithCollectionInfo,\r\n  updateUIWithUserInfo,\r\n  initNavigationMenu\r\n} from './home_ui'\r\nimport {getGroupedCompositionsWithUsers,\r\n  getGroupedCompositionsWithCollab,\r\n  isuserpage,\r\n  getGroupedCompositionsWithSubCollect,\r\n  setCurrentUserName}\r\nfrom './home_helper'\r\n\r\nexport const uriCompositionPage = '/composition.html?compositionId='\r\n\r\nconst homePageTermsAccepted = (termsAccepted) => {    \r\n    if(!termsAccepted){\r\n        generateAcceptTermsModal('header')\r\n    } \r\n}\r\nconst getMyProfile = async () => {\r\n  \r\n  const isAuthenticated = await callJsonApi('/profile', 'GET')\r\n  if (isAuthenticated.ok) {\r\n    setCurrentUserName(isAuthenticated.name)\r\n    document.getElementById('userlogin').style.display = 'none'\r\n    document.getElementById('useroptions').style.display = ''\r\n    document.getElementById('display_profile_name').innerText = `[${isAuthenticated.name}]`    \r\n    checkIfTermsAccepted(isAuthenticated, homePageTermsAccepted)    \r\n  }\r\n  return isAuthenticated\r\n}\r\n\r\nexport const getMyCompositions = async () => {\r\n  const endpoint = '/mycompositions'\r\n  const data = await callJsonApi(endpoint, 'GET')\r\n  if(data.compositions){\r\n    return renderHomePage(data.compositions, endpoint)\r\n  } else {\r\n    alert('invalid return value for compisitions list')\r\n  }  \r\n}\r\n\r\nconst getCompositionsByUserUid = async (useruid, auth) => {\r\n  const endpoint = '/compositionsbyuserid/'+useruid\r\n  const data = await callJsonApi(endpoint, 'GET')\r\n  if(data.compositions){\r\n    setCurrentUserName(data.username)\r\n    updateUIWithUserInfo(data.username, useruid)\r\n    return renderHomePage(data.compositions, endpoint)\r\n  } else {\r\n    alert('invalid return value for user id')\r\n    if(auth.ok){\r\n      navigate('my-comp')\r\n    } else {\r\n      navigate('recent-comp')\r\n    }      \r\n  }  \r\n}\r\n\r\nconst getCompositionsByColelctionUid = async (collectionuid, auth) => {\r\n  const endpoint = '/collectionastreebyid/'+collectionuid\r\n  const data = await callJsonApi(endpoint, 'GET')\r\n  if(data.compositions){\r\n    setCurrentUserName(data.username)\r\n    updateUIWithCollectionInfo(data.collection_name, data.username, data.owneruid)\r\n    return renderHomePage(data.compositions, endpoint)\r\n  } else {\r\n    alert('invalid return value for collection id')\r\n    if(auth.ok){\r\n      navigate('my-comp')\r\n    } else {\r\n      navigate('recent-comp')\r\n    }      \r\n  }  \r\n}\r\n\r\nexport const getRecentCompositions = async () => {\r\n  const endpoint = '/recentcompositions'\r\n  const data = await callJsonApi('/recentcompositions', 'GET')\r\n  if(data.compositions){\r\n    return renderHomePage(data.compositions, endpoint)\r\n  } else {\r\n    alert('invalid return value for compisitions list')\r\n  }\r\n}\r\n\r\nexport const getAllCompositions = async () => {\r\n  const endpoint = '/compositions'\r\n  const data = await callJsonApi('/compositions', 'GET')\r\n  if(data.compositions){\r\n    return renderHomePage(data.compositions, endpoint)\r\n  } else {\r\n    alert('invalid return value for compisitions list')\r\n  }\r\n}\r\n\r\nconst renderHomePage = (compositionsList, endpoint) => {\r\n\r\n  document.getElementById('loadertext').textContent = ''\r\n  document.getElementById('grid').innerHTML = ''\r\n  document.getElementById('legendbuttons').innerHTML = ''\r\n  const notUserPublicPage = !endpoint.includes('/compositionsbyuserid/') && !endpoint.includes('/collectionastreebyid/')\r\n  if(notUserPublicPage){\r\n    cleanWelcomeContainer(false)\r\n  }\r\n  if (!compositionsList.length && notUserPublicPage) {\r\n    document.getElementById('initialmessage').hidden = false\r\n    document.getElementById('initialmessage').classList.add('d-flex')\r\n  } else {   \r\n    renderHomePageWithLists(compositionsList, endpoint)\r\n  }\r\n}\r\n\r\nconst renderHomePageWithLists = (compositionsList, endpoint) => {\r\n  if(endpoint.includes('/collectionastreebyid/')){        \r\n    const parent_coll_id = endpoint.replace('/collectionastreebyid/', '')\r\n    const groupedCompsAndSubColl = getGroupedCompositionsWithSubCollect(compositionsList, parent_coll_id)       \r\n    paintListOfCompositions(groupedCompsAndSubColl, null, endpoint, compositionsList.length)\r\n  } else if (!isuserpage(endpoint)) {\r\n    const groupedComps = getGroupedCompositionsWithUsers(compositionsList)\r\n    paintListOfCompositions(groupedComps, 'groupedbyuser_final', endpoint, compositionsList.length)\r\n  }else {\r\n    const groupedCompsWithCollab = getGroupedCompositionsWithCollab(compositionsList)\r\n    paintListOfCompositions(groupedCompsWithCollab, 'groupedbycollab', endpoint, compositionsList.length)\r\n  }\r\n}\r\n\r\nconst paintGroupCollection = (listcomps, typebadge, endpoint) => {\r\n  \r\n  let allCompUIelem = ''  \r\n  for (const comp in listcomps) {    \r\n    const element = listcomps[comp]\r\n    let listgroup = ''\r\n    let groupTitle = ''\r\n    let groupId = null\r\n    if(typebadge === 'collab') {\r\n      groupTitle = 'Collaborations'\r\n    } else if (typebadge === 'coll'){\r\n      groupTitle = Object.values(element)[0].parent_collection\r\n      groupId = Object.values(element)[0].collection_uid\r\n    } else {\r\n      groupTitle = Object.values(element)[0].username\r\n      groupId = Object.values(element)[0].owner_uuid\r\n    } \r\n    for (const item of element) {      \r\n      listgroup += getUIListElemInsideCollection(item, typebadge, endpoint)\r\n    }    \r\n    allCompUIelem += getUICardElemForCollection(typebadge, element.length, groupTitle, groupId, listgroup)\r\n  }\r\n  return allCompUIelem\r\n}\r\n\r\nconst getSingleComps = (groupedComps, endpoint) => {\r\n  let listElelemts = ''\r\n  const listCompsSingle = groupedComps.singlecomps\r\n  listCompsSingle?.forEach((element) => {\r\n    const template = paintSingleComposition(element, endpoint)\r\n    listElelemts += template\r\n  })\r\n  return listElelemts\r\n}\r\n\r\nconst paintListOfCompositions = (groupedComps, customgroup, endpoint, totalcomps) => {\r\n  \r\n  let listElelemts = ''\r\n  const numberGroupsByCollections = Object.keys(groupedComps.groupedbycoll).length\r\n  const numberCustomGroups = customgroup ? Object.keys(groupedComps[customgroup]).length : 0\r\n  let numberSinglComp = groupedComps.singlecomps.length\r\n\r\n  if (numberGroupsByCollections > 0) {\r\n    const listComps = groupedComps.groupedbycoll\r\n    const template = paintGroupCollection(listComps, 'coll', endpoint)\r\n    listElelemts += template\r\n  }\r\n  if (numberCustomGroups > 0) {\r\n    const listComps = groupedComps[customgroup]\r\n    const typeofbadge = (customgroup==='groupedbycollab') ? 'collab' : 'user'\r\n    const template = paintGroupCollection(listComps, typeofbadge, endpoint)\r\n    listElelemts += template\r\n  }\r\n  if (numberSinglComp > 0) {\r\n    listElelemts += getSingleComps(groupedComps, endpoint)    \r\n  }\r\n  const legendButtons = getLegendButtons(numberGroupsByCollections, numberCustomGroups, numberSinglComp, endpoint, totalcomps) \r\n  paintMainElemsHomePage(listElelemts, legendButtons)\r\n}\r\n\r\nconst initHomPage = async () => {  \r\n  const queryString = window.location.search\r\n  const user_id = queryString.split('userid=')[1]\r\n  const collection_uid = queryString.split('collectionid=')[1]\r\n  let isAuth  = await getMyProfile()    \r\n  if(user_id){    \r\n    await getCompositionsByUserUid(user_id, isAuth)\r\n  } else if(collection_uid){\r\n    await getCompositionsByColelctionUid(collection_uid, isAuth)\r\n  } else if (isAuth.ok) {\r\n    await getMyCompositions()\r\n  } else {\r\n    await getRecentCompositions()\r\n  }\r\n  breadcrumbHandler(isAuth, user_id || collection_uid)\r\n}\r\n\r\ninitNavigationMenu()\r\nactivateGoHomeLink()\r\ninitHomPage()","\nimport { ENDPOINT } from './config'\n\nexport const getCollections = async () => {\n   \n    const response = await fetch(ENDPOINT + '/mycollections') \n    let result = null            \n    if(response?.ok){ \n        const respJson = await response.json()\n        result = respJson\n    }\n    return result\n}\n\nexport const getCollectionsError = () => {\n    alert(`Problem getting collections`)\n}\n\nexport const createListCollections = (collections,listId, coll_id) => {\n    const theList = collections.all_collections\n    const listCollContainer  = document.getElementById(listId)\n    let listOptions = `<option value='0'>...</option>`\n    let selected = null\n    theList.forEach((element) => {\n        if (element) {\n            if(element.uuid === coll_id){\n                selected = 'selected>'\n            } else {\n                selected = null\n            }\n            const template = `<option value='${element.uuid}' ${selected?selected:'>'}${element.title}</option>`\n            listOptions += template\n        }\n    })\n    const listElelemts = `<select class='custom-select' id='inputGroupSelectCollect'>${listOptions}</select>`   \n    listCollContainer.insertAdjacentHTML('afterbegin', listElelemts)\n}","import { ENDPOINT } from '../../../common/js/config'\nimport {uriCompositionPage} from './home'\n\nlet EDIT_STATUS = false\n\nconst showAllCollButton = document.getElementById('openMyCollectionsButton')\nconst editButton = document.getElementById('editmycollectionsbutton')\n\nconst fetchCollectionsTree = async () => {\n    const response = await fetch('/mycollectionsastree')\n    const data = await response.json()\n    return data\n}\n\nconst createTreeHTML = (item) => {\n    let html = `\n        <span id='removeCollIcon${item.uuid}' data-uuid='${item.uuid}' data-title='${item.title}' role='button' class='badge badge-pill badge-danger' hidden>-</span>\n        <li id='${item.uuid}' class='list-group-item border-bottom-0 border-right-0 border-top-0 border-warning'>\n            <input type='text' class='form-control border-secondary' id='treecolltitleinput${item.uuid}' data-uuid='${item.uuid}' placeholder='Type a new title'\n            title='collectiontitle' value='${item.title}' disabled>\n        </li>`\n    \n    if (item.compositions.length > 0 || item.collections.length > 0) {\n        html += '<ul>'\n        for (const composition of item.compositions) {\n            html += `<li class='list-group-item border-0'><a href='${uriCompositionPage + composition.uuid}'><u>${composition.title}</u></a></li>`\n        }\n        for (const collection of item.collections) {\n            html += createTreeHTML(collection)\n        }\n        html += '</ul>'\n    }    \n    return html\n}\n\nconst renderTree = async () => {\n    const treeContainer = document.getElementById('listCollContainerAllColl')\n    const data = await fetchCollectionsTree()\n    let html = '<ul>'\n    for (const collection of data) {\n        html += createTreeHTML(collection)\n    }\n    html += '</ul>'\n    treeContainer.innerHTML = html\n}\n\nconst clickEditButtonHandler = () => {\n    \n    if(EDIT_STATUS){\n        EDIT_STATUS = false        \n        editButton.innerText =  'Edit'\n        disableEdition()\n    } else {\n        EDIT_STATUS = true\n        editButton.innerText =  'Done'\n        enableEdition()\n    }   \n}\n\nconst enableEdition = () => {\n    \n    const elementsWithHiddenAttribute = document.querySelectorAll(`[id*='removeCollIcon']`)\n\n    elementsWithHiddenAttribute.forEach(element => {\n        element.removeAttribute('hidden')        \n        removeCollectionClickhHandler(element.getAttribute('data-uuid'), element.getAttribute('data-title'))\n    })   \n    \n    const elementsWithDisabledAttribute = document.querySelectorAll(`[id*='treecolltitleinput']`)\n\n    elementsWithDisabledAttribute.forEach(element => {\n        element.removeAttribute('disabled')\n        updateInputTextEventHandler(element.getAttribute('data-uuid'), element.value)\n    })\n}\n\nconst disableEdition = () => {\n\n    const elementsWithHiddenAttribute = document.querySelectorAll(`[id*='removeCollIcon']`)\n\n    elementsWithHiddenAttribute.forEach(element => {\n        element.setAttribute('hidden', 'true')\n    })\n\n    const elementsWithDisabledAttribute = document.querySelectorAll(`[id*='treecolltitleinput']`)    \n\n    elementsWithDisabledAttribute.forEach(element => {\n        element.setAttribute('disabled', 'true')\n    })\n}\n\nconst clickAllCollButtonHandler = async () => {\n    EDIT_STATUS = false\n    editButton.innerText =  'Edit'\n    await renderTree()\n    editButton.addEventListener('click', clickEditButtonHandler, false)\n}\n\nshowAllCollButton?.addEventListener('click', clickAllCollButtonHandler, false)\n\nconst confirmDeleteCollectionModal = async (event, collectionId, collectionTitle) => {\n\n    const chk = event.target\n\n    if (chk.tagName === 'SPAN') {\n\n        if (confirm(`Are you sure you want remove the collection ${collectionTitle} and all of its content?`) == true) {\n\n            const response = await fetch(ENDPOINT + '/deletecollection/' + collectionId, { method: 'DELETE' })\n            if (response?.ok) {\n                document.getElementById('removeCollIcon'+collectionId).remove()\n                const listElemToDelete = document.getElementById(collectionId)\n                if(listElemToDelete?.nextSibling?.tagName === 'UL'){\n                    listElemToDelete.nextSibling.remove()\n                }\n                listElemToDelete.remove()\n            }\n\n        } else {\n            event.target.checked = false\n        }\n    }\n}\n\nconst removeCollectionClickhHandler = (collectionId, collectionTitle) => {\n    document.getElementById('removeCollIcon' + collectionId).onclick= async (event) => {\n        await confirmDeleteCollectionModal(event, collectionId, collectionTitle)\n    }\n}\n\nconst updateInputTextEventHandler = (collectionId, currentTitle) => {    \n    document.getElementById('treecolltitleinput'+collectionId).onblur = (event) => {\n        handleInputBlur(event, collectionId, currentTitle)\n    }    \n}\n\nconst updateCollectionTitleRqst = (value, uuid) => {\n   \n    const updateTitleApi = ENDPOINT + '/updatecolltitle'\n    const data = { title: value, uuid: uuid }\n    \n    fetch(updateTitleApi, {\n        method: 'PATCH', \n        headers: {\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    })\n    .then()\n    .catch(error => {\n        console.error('Error updating value:', error)\n    })\n}\n\nconst handleInputBlur = (event, collId, currTitle) => {    \n    const newValue = event.target.value\n    if(currTitle !== newValue){\n        if (!newValue || newValue === '') {\n            event.target.value = currTitle\n            alert('Introduce a valid title, please')\n            return\n        } else {\n            updateCollectionTitleRqst(newValue, collId)\n        }\n    }\n}","\nimport { ENDPOINT } from '../../../common/js/config'\nimport {uriCompositionPage} from './home'\nimport {getCollections, getCollectionsError, createListCollections } from '../../../common/js/collectionshandler.js'\nimport './editcollections'\n\nconst createNewButton  = document.getElementById('createNewButton')\nconst createNewButtonAtHome  = document.getElementById('createNewButtonAtHome')\n\nconst clickNewButtonHandler = () => {\n  document.getElementById('newtitle').value = ''\n  document.getElementById('newdescription').value = ''\n  const saveCompositionButton = document.getElementById('newcreation')\n  saveEventListener(saveCompositionButton)\n  getCollections().then( result => {\n      if(result){\n          getCompCollSuccess(result)\n      } else {\n          getCollectionsError()\n      }\n  })\n}\n\ncreateNewButton?.addEventListener('click', clickNewButtonHandler, false)\ncreateNewButtonAtHome?.addEventListener('click', clickNewButtonHandler, false)\n\nconst getCompCollSuccess = (list) => {\n  document.getElementById('listCollContainer').replaceChildren()                                   \n  createListCollections(list, 'listCollContainer')\n}\n\nconst saveEventListener = (saveCompositionButton) =>{\n  saveCompositionButton?.addEventListener('click', saveEventListenerHandler)\n}\n\nconst saveEventListenerHandler = (e) => {\n  const newCreation = document.getElementById('typeOfNewCreation').value\n  let apiMethod = '/newcomposition'\n  if(newCreation === 'coll'){\n    apiMethod = '/newcollection'\n  }\n  let newtitle = document.getElementById('newtitle').value\n  const privacyLevel = document.querySelector('input[name=\"newMusicPrivacyRadios\"]:checked').value\n  if (!newtitle) {\n    alert('Introduce a valid title, please')\n    return\n  }\n\n  const newdescription = document.getElementById('newdescription').value  \n  const collectInput = document.getElementById('inputGroupSelectCollect')\n  let parentCollection = collectInput?.value || null\n  if(parentCollection === '0'){\n      parentCollection = null\n  }\n\n  let body = JSON.stringify({\n    title: newtitle,\n    privacy_level: privacyLevel,\n    parent_uuid: parentCollection,\n    description: newdescription\n  })\n\n  let errorIs = null\n\n  fetch(ENDPOINT + apiMethod, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: body\n  })\n    .then((r) => {\n      if (!r.ok) {\n        errorIs = r.statusText\n      }\n      return r.json()\n    })\n    .then(data => {\n      if (data) {\n        verifyResponse(data)\n      } else {\n        throw new Error(data)\n      }\n    }).catch((error) => {\n      errorIs = error\n    })\n}\n\nconst verifyResponse = (response)=> {  \n  if(response.composition){\n    window.location.href = uriCompositionPage + response.composition.uuid  \n  } else {\n    $('#newMusicModal').modal('hide')\n    //document.getElementById('openMyCollectionsButton').click()    \n  }\n}"]}