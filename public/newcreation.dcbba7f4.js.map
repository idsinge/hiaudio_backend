{"version":3,"sources":["common/js/config.js","common/js/utils.js","pages/home/scripts/breadcrumbhandler.js","common/js/acceptterms.js","pages/home/scripts/home.js","common/js/collectionshandler.js","pages/home/scripts/editcollections.js","pages/home/scripts/newcreation.js"],"names":["MODE","DEVPORT","ENVIRONMENTS","PROD","ENDPOINT","UPLOAD_ENDPOINT","STAGE","window","location","protocol","host","DEV","hostname","module","exports","LOADER_ELEM_ID","startLoader","loaderId","loadingMessage","loaderElement","document","getElementById","nextElementSibling","textContent","classList","add","cancelLoader","remove","callJsonApi","apimethod","rqstmethod","body","request","method","headers","JSON","stringify","fetch","sendRqst","json","respToJson","error","looksLikeMail","str","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","breadcrumbHandler","isauth","createBreadCrumbNavBar","querySelectorAll","forEach","element","addEventListener","event","preventDefault","querySelector","currentTarget","navigate","getAttribute","navBar","userOptions","ok","innerHTML","section","getRecentCompositions","getMyCompositions","hidden","getAllCompositions","console","log","checkIfTermsAccepted","userprofile","callback","terms_accepted","handleTermsNotAccepted","$","modal","backdrop","keyboard","onclick","rqstAcceptTerms","rqstRejectTerms","href","origin","generateAcceptTermsModal","attachToElem","modalDialog","getElementsByTagName","insertAdjacentHTML","uriCompositionPage","uriProfilePage","homePageTermsAccepted","termsAccepted","getMyProfile","doAfterIfLogged","doAfterIfNotLogged","isAuthenticated","style","display","innerText","name","data","compositions","renderHomePage","alert","compositionsList","paintListOfCompositions","listElelemts","template","uuid","opentocontrib","title","description","parent_collection","username","tracks","removeAttribute","initHomPage","isAuth","getCollections","response","result","respJson","getCollectionsError","createListCollections","collections","listId","coll_id","theList","all_collections","listCollContainer","listOptions","selected","EDIT_STATUS","showAllCollButton","editButton","fetchCollectionsTree","createTreeHTML","item","html","composition","renderTree","treeContainer","collection","clickEditButtonHandler","disableEdition","enableEdition","removeCollectionClickhHandler","updateInputTextEventHandler","value","setAttribute","clickAllCollButtonHandler","confirmDeleteCollectionModal","collectionId","collectionTitle","target","tagName","confirm","listElemToDelete","nextSibling","checked","currentTitle","onblur","handleInputBlur","updateCollectionTitleRqst","updateTitleApi","then","catch","collId","currTitle","newValue","createNewButton","createNewButtonAtHome","clickNewButtonHandler","saveCompositionButton","saveEventListener","getCompCollSuccess","list","replaceChildren","saveEventListenerHandler","e","apiMethod","newtitle","privacyLevel","newdescription","collectInput","parentCollection","privacy_level","parent_uuid","r","statusText","Error","verifyResponse"],"mappings":"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","file":"newcreation.dcbba7f4.js","sourceRoot":"../webapp/src","sourcesContent":["const MODE = 'STAGE' // STAGE\nconst DEVPORT = 7007\n\nconst ENVIRONMENTS = {\n    PROD:{        \n        ENDPOINT:'',\n        UPLOAD_ENDPOINT:''        \n    },\n    STAGE:{        \n        ENDPOINT: window.location.protocol+'//'+window.location.host,\n        UPLOAD_ENDPOINT: window.location.protocol+'//'+window.location.host+'/fileUpload'       \n    },\n    DEV:{        \n        ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT,\n        UPLOAD_ENDPOINT:window.location.protocol+'//'+window.location.hostname+':'+DEVPORT+'/fileUpload'        \n    }\n}\n\nmodule.exports = {    \n    ENDPOINT: ENVIRONMENTS[MODE].ENDPOINT,\n    UPLOAD_ENDPOINT: ENVIRONMENTS[MODE].UPLOAD_ENDPOINT\n}","import { ENDPOINT } from './config'\n\nexport const LOADER_ELEM_ID = 'loader'\n\nexport const startLoader = (loaderId, loadingMessage) => {    \n    const loaderElement = document.getElementById(loaderId)    \n    loaderElement.nextElementSibling.textContent = loadingMessage\n    loaderElement.classList.add(loaderId)\n}\n\nexport const cancelLoader = (loaderId) => {\n    const loaderElement = document.getElementById(loaderId)\n    loaderElement.classList.remove(loaderId)\n    loaderElement.nextElementSibling.textContent = ''\n}\n\nexport const callJsonApi = async (apimethod, rqstmethod, body) => {\n    const request = {\n        method: rqstmethod || 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n        }\n    }\n    if(body){\n        request.body = JSON.stringify(body)\n    }\n    try {\n        startLoader(LOADER_ELEM_ID, 'Loading...')\n        const sendRqst = await fetch(ENDPOINT + apimethod, request)\n        cancelLoader(LOADER_ELEM_ID)\n        const respToJson = await sendRqst.json()\n        if (respToJson && !respToJson.error) {\n            return respToJson\n        } else {\n            return (respToJson?.error || 'An error occurred')\n        }\n    } catch (error) {\n        cancelLoader(LOADER_ELEM_ID)\n        return(error)\n    }\n}\n\n/* https://stackoverflow.com/a/5166806 */\nexport const looksLikeMail = (str) => {\n    const lastAtPos = str.lastIndexOf('@')\n    const lastDotPos = str.lastIndexOf('.')\n    return (lastAtPos < lastDotPos && lastAtPos > 0 && str.indexOf('@@') == -1 && lastDotPos > 2 && (str.length - lastDotPos) > 2)\n}","import { getRecentCompositions, getMyCompositions, getAllCompositions } from './home'\n\nexport const breadcrumbHandler = (isauth) => {\n    createBreadCrumbNavBar(isauth)   \n    document.querySelectorAll('.breadcrumb-item a').forEach(function (element) {\n        element.addEventListener('click', function (event) {\n            event.preventDefault()\n            document.querySelector('.active-breadcrumb')?.classList.remove('active-breadcrumb')            \n            event.currentTarget.classList.add('active-breadcrumb')\n            let section = event.currentTarget.getAttribute('data-section')\n            navigate(section)\n        })\n    })\n}\n\nconst createBreadCrumbNavBar = (isauth) => {\n    const navBar = document.getElementById('breadcrumbnavbar')\n    let userOptions = ''\n    if(isauth.ok){\n        userOptions = `<li class='breadcrumb-item active-breadcrumb' aria-current='page'><a href='#' data-section='my-comp'>My Music</a></li>\n        <li class='breadcrumb-item'><a href='#' data-section='all-comp'>All</a></li>`\n    } else {\n        userOptions = `<li class='breadcrumb-item active-breadcrumb' aria-current='page'><a href='#' data-section='recent-comp'>Recent</a></li>\n        <li class='breadcrumb-item'><a href='#' data-section='all-comp'>All</a></li>`\n    }\n    navBar.innerHTML = userOptions    \n}\n\nfunction navigate(section) { \n    \n    switch (section) {\n        case 'recent-comp':           \n            getRecentCompositions()   \n            break\n        case 'my-comp':            \n            getMyCompositions()\n            break\n        case 'all-comp':\n            document.getElementById('initialmessage').classList.remove('d-flex')\n            document.getElementById('initialmessage').hidden = true\n            getAllCompositions()\n            break\n        default:\n            console.log('section default')\n    }\n}","import { LOADER_ELEM_ID, cancelLoader, callJsonApi } from './utils'\n\nexport const checkIfTermsAccepted = (userprofile, callback) => {\n    cancelLoader(LOADER_ELEM_ID)\n    callback(userprofile?.terms_accepted)\n}\n\nexport const handleTermsNotAccepted = () => {\n\n    $('#acceptTermsModal').modal({\n        backdrop: 'static',\n        keyboard: false  // to prevent closing with Esc button (if you want this too)\n    })\n    $('#acceptTermsModal').modal('show')\n    document.getElementById('buttonAcceptTerms').onclick = rqstAcceptTerms\n    document.getElementById('buttonRejectTerms').onclick = rqstRejectTerms\n}\n\nconst rqstAcceptTerms = async () => {\n    const data = await callJsonApi('/acceptterms', 'PUT')\n    if (data.ok) {\n        $('#acceptTermsModal').modal('hide')\n    }\n}\nconst rqstRejectTerms = async () => {\n    const data = await callJsonApi('/rejectterms', 'PUT')\n    if (data.ok) {\n        $('#acceptTermsModal').modal('hide')\n        window.location.href = window.location.origin\n    }\n}\n\nexport const generateAcceptTermsModal = (attachToElem) => {\n\n    const isModal = document.getElementById('acceptTermsModal')\n\n    if (!isModal) {\n        const modalDialog = `<div class=\"modal fade\" id=\"acceptTermsModal\" tabindex=\"-1\" role=\"dialog\">\n            <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Accept Terms</h5>                \n                </div>\n                <div class=\"modal-body\">\n                <p>By clicking on OK you accept the Terms of Use.</p>\n                <p>More information at: <span> <a href=\"${window.location.origin}/static/terms.html\" target=\"_blank\">${window.location.origin}/static/terms.html</a></span></p>\n                </div>\n                <div class=\"modal-footer\">\n                <button id=\"buttonRejectTerms\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Reject</button>\n                <button id=\"buttonAcceptTerms\" type=\"button\" class=\"btn btn-primary\">OK</button>\n                </div>\n            </div>\n            </div>\n        </div>`\n        document.getElementsByTagName(attachToElem)[0].insertAdjacentHTML('afterend', modalDialog)\n    }\n    handleTermsNotAccepted()\n}","import COMPOSITION_COVER from '../../../common/img/agp.png'\r\nimport { callJsonApi } from '../../../common/js/utils'\r\nimport {breadcrumbHandler} from './breadcrumbhandler'\r\nimport {checkIfTermsAccepted, generateAcceptTermsModal} from '../../../common/js/acceptterms'\r\n\r\nexport let uriCompositionPage = '/composition.html?compositionId='\r\nlet uriProfilePage = window.location.origin\r\n\r\n\r\ndocument.getElementById('userlogin').innerHTML = `<li class='nav-item'>\r\n  <a class='dropdown-item' href='${window.location.origin}/login.html'>Register / Login</a>\r\n  </li>\r\n  <li class='nav-item'>\r\n    <a class='dropdown-item' href='${uriCompositionPage}demopage'>Test DAW</a>\r\n  </li>`\r\ndocument.getElementById('useroptions').innerHTML = `<li class='nav-item'>\r\n      <a class='nav-link' href='${uriProfilePage + '/profile.html'}'>Profile <i id='display_profile_name'></i></a>\r\n    </li>\r\n    <li class='nav-item'>\r\n          <a class='nav-link' href='#' id='createNewButton' data-toggle='modal' data-target='#newMusicModal'>/ Create new</a>\r\n    </li>\r\n    <li class='nav-item'>\r\n        <a class='nav-link' href='#' id='openMyCollectionsButton' data-toggle='modal' data-target='#editCollectionsModal'>/ My Collections</a>\r\n    </li>`\r\n\r\n\r\nconst homePageTermsAccepted = (termsAccepted) => {    \r\n    if(!termsAccepted){\r\n        generateAcceptTermsModal('header')\r\n    } \r\n}\r\nconst getMyProfile = async (doAfterIfLogged, doAfterIfNotLogged) => {\r\n  \r\n  const isAuthenticated = await callJsonApi('/profile', 'GET')\r\n  if (isAuthenticated.ok) {\r\n    document.getElementById('userlogin').style.display = 'none'\r\n    document.getElementById('useroptions').style.display = ''\r\n    document.getElementById('display_profile_name').innerText = `[${isAuthenticated.name}]`    \r\n    checkIfTermsAccepted(isAuthenticated, homePageTermsAccepted)\r\n    await doAfterIfLogged(isAuthenticated)\r\n  } else {\r\n    await doAfterIfNotLogged(isAuthenticated)\r\n  }\r\n  return isAuthenticated\r\n}\r\n\r\nexport const getMyCompositions = async () => {\r\n  const data = await callJsonApi('/mycompositions', 'GET')\r\n  if(data.compositions){\r\n    return renderHomePage(data.compositions)\r\n  } else {\r\n    alert('invalid return value for compisitions list')\r\n  }  \r\n}\r\nexport const getRecentCompositions = async () => {\r\n  const data = await callJsonApi('/recentcompositions', 'GET')\r\n  if(data.compositions){\r\n    return renderHomePage(data.compositions)\r\n  } else {\r\n    alert('invalid return value for compisitions list')\r\n  }\r\n}\r\n\r\nexport const getAllCompositions = async () => {\r\n  const data = await callJsonApi('/compositions', 'GET')\r\n  if(data.compositions){\r\n    return renderHomePage(data.compositions)\r\n  } else {\r\n    alert('invalid return value for compisitions list')\r\n  }\r\n}\r\n\r\nconst renderHomePage = (compositionsList) => {\r\n\r\n  document.getElementById('loadertext').textContent = ''\r\n  document.getElementById('grid').innerHTML = ''\r\n  paintListOfCompositions(compositionsList)\r\n\r\n}\r\n\r\nconst paintListOfCompositions = (compositionsList) => {\r\n  \r\n  if(!compositionsList.length){\r\n    document.getElementById('initialmessage').hidden = false\r\n    document.getElementById('initialmessage').classList.add('d-flex')\r\n  } else {\r\n    let listElelemts = ''\r\n    compositionsList.forEach((element) => {\r\n      if (element) {\r\n        const template = `\r\n        <a href='${uriCompositionPage + element.uuid}' class='card-url'>\r\n        <div class='card'>          \r\n            ${element.opentocontrib ? '<span class=\"badge badge-info\">OPEN TO CONTRIB</span>' : ''}            \r\n            <div class=\"card-body\">              \r\n                <div>  \r\n                  <h5 class='card-title'>${element.title}</h5>\r\n                  <p class='card-text text-truncate'>${element.description}</p>\r\n                  <p class='text-black-50'>${element.parent_collection ? ('Collection: ' + element.parent_collection) : ''}</p>\r\n                  <span class='card-url'><i class='fa fa-user'></i>&nbsp;${element.username}</span>&nbsp;\r\n                  <span class='card-url'><i class='fa fa-music'></i>&nbsp;${'Tracks: ' +element.tracks.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </a>`\r\n        listElelemts += template\r\n      }\r\n    })\r\n    document.getElementById('grid').innerHTML = ''\r\n    document.getElementById('grid').insertAdjacentHTML('afterbegin', listElelemts)\r\n    document.getElementById('searchInput').removeAttribute('disabled')\r\n  }  \r\n}\r\n\r\nconst initHomPage = async () => {\r\n  const isAuth  = await getMyProfile(getMyCompositions,getRecentCompositions)  \r\n  breadcrumbHandler(isAuth)\r\n}\r\n\r\ninitHomPage()","\nimport { ENDPOINT } from './config'\n\nexport const getCollections = async () => {\n   \n    const response = await fetch(ENDPOINT + '/mycollections') \n    let result = null            \n    if(response?.ok){ \n        const respJson = await response.json()\n        result = respJson\n    }\n    return result\n}\n\nexport const getCollectionsError = () => {\n    alert(`Problem getting collections`)\n}\n\nexport const createListCollections = (collections,listId, coll_id) => {\n    const theList = collections.all_collections\n    const listCollContainer  = document.getElementById(listId)\n    let listOptions = `<option value='0'>...</option>`\n    let selected = null\n    theList.forEach((element) => {\n        if (element) {\n            if(element.uuid === coll_id){\n                selected = 'selected>'\n            } else {\n                selected = null\n            }\n            const template = `<option value='${element.uuid}' ${selected?selected:'>'}${element.title}</option>`\n            listOptions += template\n        }\n    })\n    const listElelemts = `<select class='custom-select' id='inputGroupSelectCollect'>${listOptions}</select>`   \n    listCollContainer.insertAdjacentHTML('afterbegin', listElelemts)\n}","import { ENDPOINT } from '../../../common/js/config'\nimport {uriCompositionPage} from './home'\n\nlet EDIT_STATUS = false\n\nconst showAllCollButton = document.getElementById('openMyCollectionsButton')\nconst editButton = document.getElementById('editmycollectionsbutton')\n\nconst fetchCollectionsTree = async () => {\n    const response = await fetch('/mycollectionsastree')\n    const data = await response.json()\n    return data\n}\n\nconst createTreeHTML = (item) => {\n    let html = `\n        <span id='removeCollIcon${item.uuid}' data-uuid='${item.uuid}' data-title='${item.title}' role='button' class='badge badge-pill badge-danger' hidden>-</span>\n        <li id='${item.uuid}' class='list-group-item border-bottom-0 border-right-0 border-top-0 border-warning'>\n            <input type='text' class='form-control border-secondary' id='treecolltitleinput${item.uuid}' data-uuid='${item.uuid}' placeholder='Type a new title'\n            title='collectiontitle' value='${item.title}' disabled>\n        </li>`\n    \n    if (item.compositions.length > 0 || item.collections.length > 0) {\n        html += '<ul>'\n        for (const composition of item.compositions) {\n            html += `<li class='list-group-item border-0'><a href='${uriCompositionPage + composition.uuid}'><u>${composition.title}</u></a></li>`\n        }\n        for (const collection of item.collections) {\n            html += createTreeHTML(collection)\n        }\n        html += '</ul>'\n    }    \n    return html\n}\n\nconst renderTree = async () => {\n    const treeContainer = document.getElementById('listCollContainerAllColl')\n    const data = await fetchCollectionsTree()\n    let html = '<ul>'\n    for (const collection of data) {\n        html += createTreeHTML(collection)\n    }\n    html += '</ul>'\n    treeContainer.innerHTML = html\n}\n\nconst clickEditButtonHandler = () => {\n    \n    if(EDIT_STATUS){\n        EDIT_STATUS = false        \n        editButton.innerText =  'Edit'\n        disableEdition()\n    } else {\n        EDIT_STATUS = true\n        editButton.innerText =  'Done'\n        enableEdition()\n    }   \n}\n\nconst enableEdition = () => {\n    \n    const elementsWithHiddenAttribute = document.querySelectorAll(`[id*='removeCollIcon']`)\n\n    elementsWithHiddenAttribute.forEach(element => {\n        element.removeAttribute('hidden')        \n        removeCollectionClickhHandler(element.getAttribute('data-uuid'), element.getAttribute('data-title'))\n    })   \n    \n    const elementsWithDisabledAttribute = document.querySelectorAll(`[id*='treecolltitleinput']`)\n\n    elementsWithDisabledAttribute.forEach(element => {\n        element.removeAttribute('disabled')\n        updateInputTextEventHandler(element.getAttribute('data-uuid'), element.value)\n    })\n}\n\nconst disableEdition = () => {\n\n    const elementsWithHiddenAttribute = document.querySelectorAll(`[id*='removeCollIcon']`)\n\n    elementsWithHiddenAttribute.forEach(element => {\n        element.setAttribute('hidden', 'true')\n    })\n\n    const elementsWithDisabledAttribute = document.querySelectorAll(`[id*='treecolltitleinput']`)    \n\n    elementsWithDisabledAttribute.forEach(element => {\n        element.setAttribute('disabled', 'true')\n    })\n}\n\nconst clickAllCollButtonHandler = async () => {\n    EDIT_STATUS = false\n    editButton.innerText =  'Edit'\n    await renderTree()\n    editButton.addEventListener('click', clickEditButtonHandler, false)\n}\n\nshowAllCollButton?.addEventListener('click', clickAllCollButtonHandler, false)\n\nconst confirmDeleteCollectionModal = async (event, collectionId, collectionTitle) => {\n\n    const chk = event.target\n\n    if (chk.tagName === 'SPAN') {\n\n        if (confirm(`Are you sure you want remove the collection ${collectionTitle} and all of its content?`) == true) {\n\n            const response = await fetch(ENDPOINT + '/deletecollection/' + collectionId, { method: 'DELETE' })\n            if (response?.ok) {\n                document.getElementById('removeCollIcon'+collectionId).remove()\n                const listElemToDelete = document.getElementById(collectionId)\n                if(listElemToDelete?.nextSibling?.tagName === 'UL'){\n                    listElemToDelete.nextSibling.remove()\n                }\n                listElemToDelete.remove()\n            }\n\n        } else {\n            event.target.checked = false\n        }\n    }\n}\n\nconst removeCollectionClickhHandler = (collectionId, collectionTitle) => {\n    document.getElementById('removeCollIcon' + collectionId).onclick= async (event) => {\n        await confirmDeleteCollectionModal(event, collectionId, collectionTitle)\n    }\n}\n\nconst updateInputTextEventHandler = (collectionId, currentTitle) => {    \n    document.getElementById('treecolltitleinput'+collectionId).onblur = (event) => {\n        handleInputBlur(event, collectionId, currentTitle)\n    }    \n}\n\nconst updateCollectionTitleRqst = (value, uuid) => {\n   \n    const updateTitleApi = ENDPOINT + '/updatecolltitle'\n    const data = { title: value, uuid: uuid }\n    \n    fetch(updateTitleApi, {\n        method: 'PATCH', \n        headers: {\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    })\n    .then()\n    .catch(error => {\n        console.error('Error updating value:', error)\n    })\n}\n\nconst handleInputBlur = (event, collId, currTitle) => {    \n    const newValue = event.target.value\n    if(currTitle !== newValue){\n        if (!newValue || newValue === '') {\n            event.target.value = currTitle\n            alert('Introduce a valid title, please')\n            return\n        } else {\n            updateCollectionTitleRqst(newValue, collId)\n        }\n    }\n}","\nimport { ENDPOINT } from '../../../common/js/config'\nimport {uriCompositionPage} from './home'\nimport {getCollections, getCollectionsError, createListCollections } from '../../../common/js/collectionshandler.js'\nimport './editcollections'\n\nconst createNewButton  = document.getElementById('createNewButton')\nconst createNewButtonAtHome  = document.getElementById('createNewButtonAtHome')\n\nconst clickNewButtonHandler = () => {\n  document.getElementById('newtitle').value = ''\n  document.getElementById('newdescription').value = ''\n  const saveCompositionButton = document.getElementById('newcreation')\n  saveEventListener(saveCompositionButton)\n  getCollections().then( result => {\n      if(result){\n          getCompCollSuccess(result)\n      } else {\n          getCollectionsError()\n      }\n  })\n}\n\ncreateNewButton?.addEventListener('click', clickNewButtonHandler, false)\ncreateNewButtonAtHome?.addEventListener('click', clickNewButtonHandler, false)\n\nconst getCompCollSuccess = (list) => {\n  document.getElementById('listCollContainer').replaceChildren()                                   \n  createListCollections(list, 'listCollContainer')\n}\n\nconst saveEventListener = (saveCompositionButton) =>{\n  saveCompositionButton?.addEventListener('click', saveEventListenerHandler)\n}\n\nconst saveEventListenerHandler = (e) => {\n  const newCreation = document.getElementById('typeOfNewCreation').value\n  let apiMethod = '/newcomposition'\n  if(newCreation === 'coll'){\n    apiMethod = '/newcollection'\n  }\n  let newtitle = document.getElementById('newtitle').value\n  const privacyLevel = document.querySelector('input[name=\"newMusicPrivacyRadios\"]:checked').value\n  if (!newtitle) {\n    alert('Introduce a valid title, please')\n    return\n  }\n\n  const newdescription = document.getElementById('newdescription').value  \n  const collectInput = document.getElementById('inputGroupSelectCollect')\n  let parentCollection = collectInput?.value || null\n  if(parentCollection === '0'){\n      parentCollection = null\n  }\n\n  let body = JSON.stringify({\n    title: newtitle,\n    privacy_level: privacyLevel,\n    parent_uuid: parentCollection,\n    description: newdescription\n  })\n\n  let errorIs = null\n\n  fetch(ENDPOINT + apiMethod, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n    body: body\n  })\n    .then((r) => {\n      if (!r.ok) {\n        errorIs = r.statusText\n      }\n      return r.json()\n    })\n    .then(data => {\n      if (data) {\n        verifyResponse(data)\n      } else {\n        throw new Error(data)\n      }\n    }).catch((error) => {\n      errorIs = error\n    })\n}\n\nconst verifyResponse = (response)=> {  \n  if(response.composition){\n    window.location.href = uriCompositionPage + response.composition.uuid  \n  } else {\n    $('#newMusicModal').modal('hide')\n    //document.getElementById('openMyCollectionsButton').click()    \n  }\n}"]}