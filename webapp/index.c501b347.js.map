{"version":3,"sources":["js/config.js","index/index.js"],"names":["MODE","DEVPORT","ENVIRONMENTS","PROD","ENDPOINT","UPLOAD_ENDPOINT","STAGE","DEV","module","exports","listElelemts","errorIs","songs","queryString","window","location","search","isAuthenticated","split","domainIs","host","uriSongPage","document","getElementById","innerHTML","fetch","method","headers","then","r","ok","statusText","json","data","catch","error","renderHomePage","songsList","classList","remove","alert","paintListOfSongs","forEach","element","collection","template","id","photo_url","SONG_COVER","title","insertAdjacentHTML","removeAttribute","newProjectButton","addEventListener","e","newtitle","value","body","JSON","stringify","song","Error","href"],"mappings":";;;AAAA,IAAMA,EAAO,MACPC,EAAU,KAEVC,EAAe,CACjBC,KAAK,CACDC,SAAS,GACTC,gBAAgB,IAEpBC,MAAM,CACFF,SAAS,GACTC,gBAAgB,IAEpBE,IAAI,CACAH,SAAS,qBAAqBH,EAC9BI,gBAAgB,qBAAqBJ,EAAQ,gBAIrDO,OAAOC,QAAU,CACbL,SAAUF,EAAaF,GAAMI,SAC7BC,gBAAiBH,EAAaF,GAAMK;;ACuGtC,aA3HF,IAAA,EAAA,EAAA,QAAA,mBACA,EAAA,QAAA,gBAAuC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAEvC,IAAIK,EAAe,GACfC,EAAU,KACVC,EAAQ,GAENC,EAAcC,OAAOC,SAASC,OAC9BC,EAAkBJ,EAAYK,MAAM,SAAS,GAE7CC,EAAWL,OAAOC,SAASK,KAC7BC,EAAc,qBACF,iBAAbF,IACDE,EAAc,UAAYA,GAI1BC,SAASC,eAAe,aAAaC,UADnCP,EAKK,4QAEkH,yEAG3HQ,MAAMrB,EAAQ,SAAG,SAAU,CACzBsB,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,OAAU,sBAEXC,KAAK,SAACC,GAIP,OAHKA,EAAEC,KACLnB,EAAUkB,EAAEE,YAEPF,EAAEG,SAERJ,KAAK,SAAAK,GACAA,EAAKrB,QACPA,EAAQqB,EAAKrB,SAEdsB,MAAM,SAACC,GACRxB,EAAUwB,IACTP,KAAK,WACNQ,EAAexB,EAAOD,KAG1B,IAAMyB,EAAiB,SAACC,EAAWF,GAEXb,SAASC,eAAe,UAChCe,UAAUC,OAAO,UAE3BJ,EACFK,MAAML,GAENM,EAAiBJ,IAIfI,EAAmB,SAACJ,GACxBA,EAAUK,QAAQ,SAACC,GACjB,GAAIA,EAAS,CACX,IAAIC,EAAa,GACbD,EAAQC,aACVA,EAAiDD,oCAAAA,OAAAA,EAAQC,WAAuCD,8BAAAA,OAAAA,EAAQC,WAAgB,SAE1H,IAAMC,EAGWxB,wFAAAA,OAAAA,EAAcsB,EAAQG,GACnBH,gCAAAA,OAAAA,EAAQI,WAAaC,EAAU,QAGhC3B,iIAAAA,OAAAA,EAAasB,EAAQG,GAA8BH,6BAAAA,OAAAA,EAAQM,MACjEL,2BAAAA,OAAAA,EAIZ,sEACDlC,GAAgBmC,KAGpBvB,SAASC,eAAe,QAAQ2B,mBAAmB,aAAcxC,GACjEY,SAASC,eAAe,eAAe4B,gBAAgB,aAGnDC,EAAmB9B,SAASC,eAAe,WACjD6B,GAAoBA,EAAiBC,iBAAiB,QAAS,SAACC,GAC9D,IAAIC,EAAWjC,SAASC,eAAe,YAAYiC,MACnD,GAAKD,EAAL,CAIA,IAAIE,EAAOC,KAAKC,UAAU,CACxBV,MAAOM,IAIT9B,MAAMrB,EAAQ,SAAG,WAAY,CAC3BsB,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZ8B,KAAMA,IAEL7B,KAAK,SAACC,GAIL,OAHKA,EAAEC,KACLnB,EAAUkB,EAAEE,YAEPF,EAAEG,SAEVJ,KAAK,SAAAK,GACJ,IAAIA,EAAK2B,KAGP,MAAM,IAAIC,MAAM5B,GAFhBnB,OAAOC,SAAS+C,KAAQzC,EAAcY,EAAK2B,KAAKd,KAIjDZ,MAAM,SAACC,GACRxB,EAAUwB,SA7BZK,MAAM","file":"index.c501b347.js","sourceRoot":"../src","sourcesContent":["const MODE = 'DEV'\nconst DEVPORT = 7007\n\nconst ENVIRONMENTS = {\n    PROD:{        \n        ENDPOINT:'',\n        UPLOAD_ENDPOINT:''        \n    },\n    STAGE:{        \n        ENDPOINT:'',\n        UPLOAD_ENDPOINT:''       \n    },\n    DEV:{        \n        ENDPOINT:'https://localhost:'+DEVPORT,\n        UPLOAD_ENDPOINT:'https://localhost:'+DEVPORT+'/fileUpload'        \n    }\n}\n\nmodule.exports = {    \n    ENDPOINT: ENVIRONMENTS[MODE].ENDPOINT,\n    UPLOAD_ENDPOINT: ENVIRONMENTS[MODE].UPLOAD_ENDPOINT\n}","import SONG_COVER from '../img/agp.png'\r\nimport { ENDPOINT } from '../js/config'\r\n\r\nlet listElelemts = ''\r\nlet errorIs = null\r\nlet songs = []\r\n\r\nconst queryString = window.location.search\r\nconst isAuthenticated = queryString.split('auth=')[1]\r\n\r\nconst domainIs = window.location.host\r\nlet uriSongPage = '/song.html?songId='\r\nif(domainIs !== 'localhost:80'){\r\n  uriSongPage = '/webapp' + uriSongPage\r\n}\r\n\r\nif (isAuthenticated) {\r\n  document.getElementById('menuRight').innerHTML = `<a class=\"button\" href=\"https://localhost:7007/profile\">Profile</a>\r\n  <div>\r\n      <input type=\"text\" class=\"newtitle\" id=\"newtitle\" placeholder=\"new song title\" title=\"newtitle\" >\r\n      <input type=\"submit\" id=\"newsong\" value=\"Create new song\"></input>\r\n  </div>`\r\n} else {\r\n  document.getElementById('menuRight').innerHTML = `<a class=\"button\" href=\"https://localhost:7007/login\">Google Login</a>`\r\n}\r\n\r\nfetch(ENDPOINT + '/songs', {\r\n  method: 'GET',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  }\r\n}).then((r) => {\r\n  if (!r.ok) {\r\n    errorIs = r.statusText\r\n  }\r\n  return r.json()\r\n})\r\n  .then(data => {\r\n    if (data.songs) {\r\n      songs = data.songs\r\n    }\r\n  }).catch((error) => {\r\n    errorIs = error\r\n  }).then(() => {\r\n    renderHomePage(songs, errorIs)\r\n  })\r\n\r\nconst renderHomePage = (songsList, error) => {\r\n\r\n  const loaderElement = document.getElementById('loader')\r\n  loaderElement.classList.remove('loader')\r\n\r\n  if (error) {\r\n    alert(error)\r\n  } else {\r\n    paintListOfSongs(songsList)\r\n  }\r\n}\r\n\r\nconst paintListOfSongs = (songsList) => {\r\n  songsList.forEach((element) => {\r\n    if (element) {\r\n      let collection = ''\r\n      if (element.collection) {\r\n        collection = `<a href=\"./index.html?collection=${element.collection}\" class=\"card-link green\">${element.collection}</a>`\r\n      }\r\n      const template = `\r\n        <div class=\"grid-div\">\r\n          <div class=\"card\">\r\n            <a href=\"${uriSongPage + element.id}\">\r\n              <img src=\"${element.photo_url || SONG_COVER}\" alt=\"Card image cap\" class=\"card-img\">\r\n            </a>\r\n            <div class=\"card-container\">\r\n              <a href=\"${uriSongPage +element.id}\" class=\"card-link blue\">${element.title}</a>\r\n              <p>${collection}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `\r\n      listElelemts += template\r\n    }\r\n  })\r\n  document.getElementById('grid').insertAdjacentHTML('afterbegin', listElelemts)\r\n  document.getElementById('searchInput').removeAttribute('disabled')\r\n}\r\n\r\nconst newProjectButton = document.getElementById('newsong')\r\nnewProjectButton && newProjectButton.addEventListener(\"click\", (e) => {\r\n  let newtitle = document.getElementById('newtitle').value\r\n  if (!newtitle) {\r\n    alert('Introduce a valid title, please')\r\n    return\r\n  }\r\n  let body = JSON.stringify({\r\n    title: newtitle\r\n  })\r\n\r\n\r\n  fetch(ENDPOINT + '/newsong', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json',\r\n    },\r\n    body: body\r\n  })\r\n    .then((r) => {\r\n      if (!r.ok) {\r\n        errorIs = r.statusText\r\n      }\r\n      return r.json()\r\n    })\r\n    .then(data => {\r\n      if (data.song) {\r\n        window.location.href =  uriSongPage + data.song.id\r\n      } else {        \r\n        throw new Error(data)\r\n      }\r\n    }).catch((error) => {      \r\n      errorIs = error\r\n    })\r\n\r\n})"]}